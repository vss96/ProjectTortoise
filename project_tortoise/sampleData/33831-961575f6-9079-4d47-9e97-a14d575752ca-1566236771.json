{"author_flair_text":null,"author":"vincentk","id":"cv3ya","edited":false,"parent_id":"t1_cv3sz","gilded":0,"retrieved_on":1473808755,"distinguished":null,"controversiality":0,"body":"hmm. map is fairly basic... however, what i keep on missing in tutorials like this is a way to take it further. what i mean is this: in python, you can get very far once you know about the import statement and the dir() function, and that myObject.\\_\\_foo\\_\\_ is usually a \"special\" method that can be used for \"meta\" stuff like operator overloading etc. . the rest is mostly just a tedious exercise in inspecting objects and browsing online libraries.\r\n\r\ndons admittedly shows the use of the :t operator used for type introspection, but e.g. in his error handling example in the first part of the tutorial, he goes to show five different ways of handling a key lookup error, without even explicitly suggesting that (let alone *how*) these error handling methods might be transferrable to other situations. i may *assume* that wrapping my call with a Maybe return type will do the trick, but being a newbie, i'm in very weak position to start working with assumptions.\r\n\r\nby which i don't mean to diss the tutorial. it looks *very nice*, and being an interested haskell newbie, i'm certainly going to work through it.","stickied":false,"link_id":"t3_v34f","subreddit_id":"t5_2fwo","subreddit":"programming","created_utc":1166365082,"author_flair_css_class":null,"score":8,"ups":8,"timestamp_epoch":1566236771,"message_id":"33831-961575f6-9079-4d47-9e97-a14d575752ca-1566236771"}