{"distinguished":null,"retrieved_on":1473809606,"gilded":0,"edited":false,"id":"cwclm","parent_id":"t1_cwcgn","author":"kawa","author_flair_text":null,"ups":1,"score":1,"author_flair_css_class":null,"created_utc":1167395791,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_w79v","stickied":false,"body":"But there is a Set.filter. I see no reason why a filterM shouldn't be possible too, it simply has to be implemented in the set-library. \r\n\r\nThe real problem is that it's not possible to lift any function to monadic form. Set.filter was just an example. This limits the usability of monads because you always have to refactor your code accordingly if you want to use it in monads.\r\n","controversiality":0,"timestamp_epoch":1566236779,"message_id":"56610-67b24e31-a51f-4c18-9bbe-0b5b2dd646a3-1566236779"}