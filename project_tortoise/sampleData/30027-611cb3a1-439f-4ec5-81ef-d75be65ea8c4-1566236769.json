{"gilded":0,"distinguished":null,"retrieved_on":1473808596,"author_flair_text":null,"author":"hanzie","parent_id":"t1_cuvm2","id":"cuvn2","edited":false,"subreddit":"programming","ups":12,"score":12,"author_flair_css_class":null,"created_utc":1166173515,"body":"I often see people assigning null to stream before the try-block, but that's useless. You can simply put the row \"BufferedReader in = new ...\" outside the try/except/finally because if it throws, \"in\" hasn't yet been assigned to anything and there's nothing to close. You can then get rid of the \"if (in!=null)\" checks in the finally-block as well.\r\n\r\nI would also add a throws-clause to the method's signature and just write this:\r\n\r\n    BufferedReader in = new BufferedReader(new FileReader (\"infilename\"));\r\n    try {\r\n        String str;\r\n        while ((str = in.readLine()) != null) {\r\n            process(str);\r\n        }\r\n    } finally {\r\n        in.close();\r\n    }\r\n\r\nIt's equally safe and handles exceptions better.\r\n","controversiality":0,"subreddit_id":"t5_2fwo","link_id":"t3_utqb","stickied":false,"timestamp_epoch":1566236769,"message_id":"30027-611cb3a1-439f-4ec5-81ef-d75be65ea8c4-1566236769"}