{"gilded":0,"retrieved_on":1473808158,"distinguished":null,"author_flair_text":null,"author":"shit","id":"cu88i","parent_id":"t1_cu79q","edited":false,"subreddit":"programming","author_flair_css_class":null,"created_utc":1165666788,"score":3,"ups":3,"controversiality":0,"body":"Modules in Ruby and Python are completely different beasts. Ruby modules are used for mixins and for namespace management.\r\n\r\nIf you do:\r\n\r\n    require \"some/lib\"\r\n\r\nin Ruby, and some/lib.rb defines the \"Foo\" module, it is globally available. Modules in Python are for namespace management only. If you do:\r\n\r\n    import foo\r\n\r\nThe file foo.py is executed in its own namespace, which is then made available in the importing module (but not in other modules) via the identifier `foo`. Ruby completely misses a feature like this. Most times, Ruby's \"modules as namespaces\" works out well, too.\r\n\r\nEdit: grammar","link_id":"t3_u2mr","stickied":false,"subreddit_id":"t5_2fwo","timestamp_epoch":1566236764,"message_id":"18280-989ac6ab-2fb7-4e5b-88c3-4609bfff9ebe-1566236764"}