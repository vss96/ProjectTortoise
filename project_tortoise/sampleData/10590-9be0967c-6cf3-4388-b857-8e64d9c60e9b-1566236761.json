{"id":"cts9n","parent_id":"t3_trbc","edited":false,"author_flair_text":null,"author":"kanagawa","distinguished":null,"retrieved_on":1473807861,"gilded":0,"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_trbc","controversiality":0,"body":"\r\n\r\n&gt; The truth however is that Java has just moved the complexity of deciding when and how to make many types of optimizations out of the hands of the language and its developers and instead put them into the compiler and the runtime environment. If you have the compiler technology to do it, then this seems like a much better solution.\r\n\r\nIt's not a solution at all. In some situations you might want or need the compiler to get out of your way and let you work low-down in the gory bits. In lots of cases, you don't care about that or you want some other feature-- like portable executables.\r\n\r\nSo, what we need is a language with a just-in-time bytecode compiler, a native compiler, a highly portable run-time, scads of libraries, great documentation, and, and, and ... \r\n\r\nBut, in any case this doesn't really describe either C++ or Java.","score":2,"ups":2,"created_utc":1165374259,"author_flair_css_class":null,"subreddit":"programming","timestamp_epoch":1566236761,"message_id":"10590-9be0967c-6cf3-4388-b857-8e64d9c60e9b-1566236761"}