{"retrieved_on":1473809371,"distinguished":null,"gilded":0,"id":"cw070","parent_id":"t3_vzw8","edited":false,"author_flair_text":null,"author":"[deleted]","author_flair_css_class":null,"created_utc":1167081877,"score":42,"ups":42,"subreddit":"programming","link_id":"t3_vzw8","stickied":false,"subreddit_id":"t5_2fwo","controversiality":0,"body":"My favorite practical language which I use all the time - Python. Has a maintainability and elegance that very few other languages rival. Plus it has decent speed and good library support. It does everything I need. And PyPy looks like it is going to create the best implementation of a dynamic language around.\r\n\r\nFrom a theoretical, totally awesome standpoint - Common Lisp and Smalltalk. Their purity and power is amazing.\r\n\r\nFrom a simplicity and raw control standpoint - C. It still is the lingua franca of programming and if you need raw speed, it does the job. I particularly find something like Objective-C fascinating.\r\n\r\nFrom a 'I admire you but I don't think I'll ever use you' standpoint - Haskell. Another very elegant language, but with so many other languages to focus on, it has to take a back seat. I feel the same way about Erlang's concurrency. Lua, too.\r\n\r\nAnd finally, the language that makes me think 'I would've loved you but you have too many flaws' - Ruby. The more I study other languages, the more I realize that it is a very interesting combination of Lisp and Smalltalk inside a package that remains simple like Python. It is a neat language, but implementation issues (speed, uncertainty of the future VM, and lack of libraries) keep me away from it for now. Maybe another day.\r\n\r\nAnother comment I'd like to make is it amazes me how Smalltalk and Lisp have been passed over by modern programmers. They have more simplicity yet more power than just about any of their descendants, but nobody wants to pay attention to them. That baffles me.\r\n\r\nI'm too much of a language junkie to have a favorite. I figure at some point in my life I'll put my hand to designing my own language, though what level of success I have, I don't know. You can't help but to admire people like Guido and Matz after you have studied languages, though. It is a hard but very interesting job (designing a language that is).","timestamp_epoch":1566236778,"message_id":"50097-57ba3c1e-3132-4f88-8c47-4b51fb5469d4-1566236778"}