{"id":"cukgj","edited":false,"parent_id":"t3_ujjo","author":"catamorphism","author_flair_text":null,"retrieved_on":1473808390,"distinguished":null,"gilded":0,"stickied":false,"link_id":"t3_ujjo","subreddit_id":"t5_2fwo","controversiality":0,"body":"If not for do-notation, I would never have successfully learned Haskell. This was at a time just before all the tutorials started to come out, but I couldn't understand what the monad laws meant, and I couldn't get anywhere until I stopped trying to understand them and started writing code with \"do\" as if I was writing in an imperative language. At the times when my assumptions would fail, then I would stop and re-examine what I was doing.\r\n\r\nBut that's just me. YMMV. Maybe one of the problems with the proliferation of monad tutorials and other newbie Haskell tutorials is assuming that there can be a single metaphor that suits everyone and all learning styles.","created_utc":1165931830,"author_flair_css_class":null,"score":5,"ups":5,"subreddit":"programming","timestamp_epoch":1566236767,"message_id":"24719-a8f6ec97-826c-4983-a1d8-00976dc8d86e-1566236767"}