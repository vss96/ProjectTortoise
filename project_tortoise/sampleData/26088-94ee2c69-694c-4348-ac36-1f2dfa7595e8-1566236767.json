{"retrieved_on":1473808440,"distinguished":null,"gilded":0,"id":"cun8k","edited":false,"parent_id":"t1_cumpa","author":"pjdelport","author_flair_text":null,"created_utc":1165972023,"author_flair_css_class":null,"score":3,"ups":3,"subreddit":"programming","stickied":false,"link_id":"t3_ujjo","subreddit_id":"t5_2fwo","body":"&gt; This is much like \"Lawyer Language\" that is confusing precisely because it looks somewhat like natural language, when it really isn't.\r\n\r\nThat's hardly fair;  programming language constructs don't carry the same expectation of consistency that natural languages do.  Both their syntax and semantics are [wildly variable and arbitrarily incompatible](http://merd.sourceforge.net/pixel/language-study/syntax-across-languages/), for even the most common things.\r\n\r\nAssuming a particular imperative interpretation of Haskell's `do`-notation is just as much a programmer misstep as assuming increment/decrement semantics for `++`/`--`, or namespace selection for `::`, or equation/binding for other languages' `=`/`&gt;&gt;=` (or attribute lookup for Perl/PHP's `.`, or default scoping for Python's `with` block, or...):  it says more about the programmer's background than it does about the syntax being misleading.","controversiality":0,"timestamp_epoch":1566236767,"message_id":"26088-94ee2c69-694c-4348-ac36-1f2dfa7595e8-1566236767"}