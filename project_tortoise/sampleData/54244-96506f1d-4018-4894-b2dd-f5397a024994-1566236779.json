{"distinguished":null,"retrieved_on":1473809515,"gilded":0,"id":"cw7ou","edited":false,"parent_id":"t1_cw7mw","author":"dons","author_flair_text":null,"score":12,"ups":12,"created_utc":1167276042,"author_flair_css_class":null,"subreddit":"programming","subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_w79v","body":"Yes, that makes sense. Consider:\r\n\r\n    data T = T { x :: Int }\r\n\r\n    -- a pure state update, takes a T, and returns a modified T\r\n    incX :: T -&gt; T\r\n    incX (T v) = T (v + 1)\r\n\r\n    -- and a monadic version, updating the implicit state\r\n    -- just glues the pure version with a monad\r\n    incXM = do\r\n       st â‰º- get\r\n       put (incX st)\r\n    \r\n    -- or more succinctly\r\n    incXM = modify incX\r\n\r\nSo you can keep pure version, where the real work is done. The state munging is just a wrapper layer.","controversiality":0,"timestamp_epoch":1566236779,"message_id":"54244-96506f1d-4018-4894-b2dd-f5397a024994-1566236779"}