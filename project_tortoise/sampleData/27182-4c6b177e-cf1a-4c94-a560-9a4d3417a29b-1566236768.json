{"created_utc":1166057821,"author_flair_css_class":null,"score":14,"ups":14,"subreddit":"programming","stickied":false,"link_id":"t3_uocv","subreddit_id":"t5_2fwo","body":"The \"var\" keyword is not a dynamic language feature.  This not like the \"var\" in javascript or the variant type in VB.  It essentially instructs the compiler to replace the keyword \"var\" with the type of the expression used in the initalization.  The article on www.developer.com actually didn't get it quite right on several points.  Any expression can be used to infer the type of a local variable as long as the expression has a type and the type is not the null type.  Also you cannot declare multiple variables with one declarator using var.  Again \"var\" is not a type.\r\n\r\nC# 3.0 does not include embedded SQL.  It has query expressions which are entirely different.  When the C# compiler sees a query expression it translates the query into a sequence (joined together by the member access operator '.') of method calls with lambdas as parameters.  These lambdas may be compiled into delegates or into expression trees (like quoting a lambda).  The compiler does not specify which methods are invoked so depending on which provider is applicable given the arguments it will bind to various providers.\r\n\r\nDLINQ is a LINQ provider in that it provides an implementation of the query pattern such that the compiler can successfully bind any query expression to their methods.  DLINQ then analyzes the expression trees that are passed to it and translates the C# expression structure into SQL.\r\n\r\nOther providers do different things.  There are providers that query in-memory, XML, databases, map/reduce style computations, and many others.\r\n\r\nThe query expressions are much more closely aligned with Haskell's list comprehensions which are synactic sugar for more basic language features than they are to embedded SQL.\r\n\r\nHope this helps.","controversiality":0,"retrieved_on":1473808486,"distinguished":null,"gilded":0,"edited":false,"parent_id":"t1_cup9g","id":"cuppt","author":"wesdyer","author_flair_text":null,"timestamp_epoch":1566236768,"message_id":"27182-4c6b177e-cf1a-4c94-a560-9a4d3417a29b-1566236768"}