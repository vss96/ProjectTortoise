{"stickied":false,"link_id":"t3_tsel","subreddit_id":"t5_2fwo","body":"You need to read\r\n\r\nhttp://jesusphreak.infogami.com/blog/why_django\r\n\r\n\r\n1. Python has a big standard library.  This is a huge point in its favor.  Not because the language is better, but because so much stuff has already been done for you.\r\n\r\n2. I want online documentation.  It's 2006, I don't want to have to flip back and forth in a book.\r\n\r\n3. Read the above linked article.  *\"I couldn't jam application code into the template. It truly restricted me to only formatting my content, which is exactly what a templating engine should do. And the Django developers are committed to this, which means it won't just turn into a PHP. This is good.\"*\r\n\r\n4. Speed is not neutral -- it directly affects your hosting costs.  If you have a large audience, you want it.\r\n\r\n5. Optional feature, and not just for managing SQL.  \r\n\r\n6. *\"Generic views, much like the admin interface, are very misunderstood. They are not to be compared to Rails' scaffolding either. They do not generate any HTML for you. They do, however, do the grunt work of basic CRUD operations and such, and they are very flexible. Infact, the admin application is built ON TOP of generic views.\"*\r\n\r\n7. You get to choose your ORM.  Some are better than others.  This is a win.  And Python wins are INDEED Django wins, by default.  If you don't believe it, try writing a web framework in FORTRAN.\r\n\r\n8. I don't care either way about this, it's orthogonal to the issue.\r\n\r\n6.","controversiality":0,"created_utc":1165438043,"author_flair_css_class":null,"score":3,"ups":3,"subreddit":"programming","id":"ctvx6","parent_id":"t1_ctt79","edited":false,"author_flair_text":null,"author":"lemmikins","retrieved_on":1473807928,"distinguished":null,"gilded":0,"timestamp_epoch":1566236761,"message_id":"12327-955380bd-e8b1-4c17-94dd-ddcb43d0c1d3-1566236761"}