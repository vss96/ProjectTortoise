{"id":"cw1uj","parent_id":"t3_w0ju","edited":false,"author":"paulajohnson","author_flair_text":null,"distinguished":null,"retrieved_on":1473809402,"gilded":0,"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_w0ju","body":"I'm not doing a start up, but if I were, then...\r\n\r\nIf my start-up were web-based then I'd use Django or Rails.  They are point solutions optimised for this application, and are pretty much unbeatable at getting something up and running.\r\n\r\nIf I were transported back to 1997 then I'd go with Paul Graham and use Lisp.  Back in the Elder Days of the Web there were no point solutions to the problem of getting dynamic content on the Web, so it was all just part of the application space.  Not any more.\r\n\r\nif I my application did complicated scheduling or reputation management algorithms or something then it would have moved outside the competence of the point solutions for dynamic web sites, and I'd sort-of follow Paul Graham again, but to Haskell not Lisp.  Haskell is now the language of choice for getting complicated stuff working reliably and quickly.\r\n\r\nPaul.","controversiality":0,"score":6,"ups":6,"created_utc":1167133145,"author_flair_css_class":null,"subreddit":"programming","timestamp_epoch":1566236778,"message_id":"50992-6389eab8-c6de-4490-acaa-bdbc0541de52-1566236778"}