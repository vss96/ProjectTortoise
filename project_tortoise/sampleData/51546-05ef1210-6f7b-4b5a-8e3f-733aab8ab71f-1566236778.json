{"body":"The author of this blog does not know what he is talking about. \r\n\r\n\"Acquire\" and \"release\" refer only to ordering semantics of load and store operations. The variable itself is not acquired in any way so there is no need to release it. That the blog author got it wrong suggest the terminology should be changed, not that standards committee is ignorant of threading.\r\n\r\nThe standards committee is not trying to disable optimizations based on code reordering. They are attempting to specify ordering in the context of atomic operations, not all operations. Code that employed no such operations or threading primitives would be unaffected. The goal is to allow programmers to reason about interactions between threads and have that reasoning apply to any compliant C++ implementation.\r\n\r\nA mutex will not be required to implement this. As the referenced proposal says, \"... this API would have to be implemented largely with either compiler intrinsics or assembly code.\" The linux kernel source contains code that demonstrates the meat of such an implementation. The point of specifying atomic operations is to make it possible to avoid locks.\r\n\r\nThe C specification does not talk about threads, therefore it says nothing about \"volatile\" in the context of threading. In particular, nothing is said about reordering of operations around loads and stores to volatile variables. This same issue arose in Java and is what prompted the memory model update.\r\n\r\nThe form over substance argument has little to do with the issues being discussed. The concern is to balance C compatibility with breaking existing C++ code. Crowl's approach was not favored because it added keywords (possibly breaking existing code), but may not improve compatibility with C because the C committee is not involved and may create an altogether different solution.\r\n\r\nAll of this is pretty plain from the meeting report on artima.","controversiality":0,"link_id":"t3_vzb6","stickied":false,"subreddit_id":"t5_2fwo","subreddit":"programming","author_flair_css_class":null,"created_utc":1167160368,"score":2,"ups":2,"author":"bdell","author_flair_text":null,"id":"cw2w7","edited":false,"parent_id":"t3_vzb6","gilded":0,"retrieved_on":1473809422,"distinguished":null,"timestamp_epoch":1566236778,"message_id":"51546-05ef1210-6f7b-4b5a-8e3f-733aab8ab71f-1566236778"}