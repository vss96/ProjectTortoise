{"distinguished":null,"retrieved_on":1473808644,"gilded":0,"edited":false,"id":"cuy45","parent_id":"t1_cuxqb","author_flair_text":null,"author":"jmelesky","score":3,"ups":3,"created_utc":1166210217,"author_flair_css_class":null,"subreddit":"programming","subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_uuzg","controversiality":0,"body":"Good devil's advocate effort.\r\n\r\nHowever, it's the current state of the industry that we spend significantly more time reading code than writing it. As such, optimizing for readability is an eminently worthwhile thing to do.\r\n\r\nAnd, that said, i want to direct the readers' attention to:\r\n\r\n&gt; [functional programming] will take off only when someone designs a functional language that anyone with an IQ over 110 can learn in a few days just by reading the spec.\r\n\r\nWell, that's Scheme. The spec for Scheme is ridiculously short (about 50 pages for R5RS) in comparison to almost any other language (Oberon being the exception that i'm aware of, though that's certainly obscure). It used to be a joke that the entirety of the Scheme specification could fit into the space devoted to the index of the Common Lisp spec.\r\n\r\nBut i digress. The point is that such a thing already exists, and has existed for 30 years. I don't think that simpler syntactic and semantic rules are the answer. \r\n","timestamp_epoch":1566236769,"message_id":"31161-5e4cf6e0-ef5f-41e3-8e5d-5a472f7e5af5-1566236769"}