{"controversiality":0,"body":"&gt; This is what I mean: Let's say you are using a 64-bit key. A theoretical cryptographer will tell you that he'll need, on average, 2^32 attempts to decrypt your message.\r\n\r\nNo, this is just what i was talking about:  2^32 is only a vanishingly small 0.000000023 percent (less than one billionth) of the keyspace.  To cover half of it, you need 2^63 attempts.\r\n\r\n&gt; From the theoretical cryptographer's point of view, the extra time needed to decide if each decryption attempt was successful is equivalent to increasing the key length from 64 to 68 bits.\r\n\r\nYou went from a 4-fold increase to a 16-fold increase here.  In reality, the checking factor remains constant, and (practically speaking) independent of the key length.\r\n\r\nThe other thing to consider (as explained in the article)  is that the checking process generally lets you disqualify trial keys based on only very small amount of decrypted text, which can save a *lot* of decryption work overall.  For example, letting you decrypt only 1KB of a 1MB message translates into a thousand-fold improvement.  (In practice, you can probably get away with significantly less than 1KB.)","stickied":false,"link_id":"t3_uz8g","subreddit_id":"t5_2fwo","subreddit":"programming","created_utc":1166385855,"author_flair_css_class":null,"score":2,"ups":2,"author":"pjdelport","author_flair_text":null,"id":"cv4wz","parent_id":"t1_cv4no","edited":false,"gilded":0,"retrieved_on":1473808772,"distinguished":null,"timestamp_epoch":1566236771,"message_id":"34349-a9184910-0e09-4194-b145-36c59f880a1c-1566236771"}