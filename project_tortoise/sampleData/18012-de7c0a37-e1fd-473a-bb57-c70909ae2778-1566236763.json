{"score":7,"ups":7,"author_flair_css_class":null,"created_utc":1165645976,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_u6d7","stickied":false,"body":"&gt; That idiom's even standardised in C99 (!): the last element of a struct can be a foo[], in which case indexing foo indexes off the end of the struct.\r\n\r\nThe nice thing about making it part of the language is that the compiler can prevent passing objects of such struct type by value. Using the usual char dummy[1] trick leaves you open to such bugs. (Edit: You can prohibit this in C++ by declaring a private unimplemented copy constructor.)\r\n\r\n&gt; I'm not sure if that is in C++, and I'm not sure I want to know ;)\r\n\r\nNope, it isn't. Now you know, and can sleep calmly. :)","controversiality":0,"distinguished":null,"retrieved_on":1473808147,"gilded":0,"edited":false,"id":"cu7mi","parent_id":"t1_cu73d","author":"psykotic","author_flair_text":null,"timestamp_epoch":1566236763,"message_id":"18012-de7c0a37-e1fd-473a-bb57-c70909ae2778-1566236763"}