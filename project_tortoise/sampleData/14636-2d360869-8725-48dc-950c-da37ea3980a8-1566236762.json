{"stickied":false,"link_id":"t3_u0r5","subreddit_id":"t5_2fwo","body":"Whatever. At least he calls them \"personal\" peeves. When this blog post doesn't say something subjective, it says something wrong.\r\n\r\nThe alternative to tag-and-switch programming is object hierarchies bristling with little leaf classes, each 20 lines of boilerplate and 4 lines of logic. Good job there! The acid test for tag-and-switch vs. polymorphism is how many times you have to do the tag-and-switch; if it's \"once\", you use the switch statement.\r\n\r\nAnybody who says end-of-block comments are \"beyond ignorant\" has never written a state machine before. Same with anyone who \"factors\" a coherent 1000-line method into a forest of pretty little methods.\r\n\r\nAnybody who says \"error codes are dead\" clearly also thinks C/ObjC/C++ is also \"dead\". Systems programmers can't rely on exceptions; they leave the program in undefined state.\r\n\r\nSubclassing \"Integer\" into \"Money\". Yeah, I'm not sure where to start with that one. I think I'll start by subclassing \"String\" to \"English\". That'll help me internationalize, won't it! And it's more domain-specific!\r\n\r\nHave any of you noticed that many of the most ass-kicking programs out there aren't written in sexy languages, and aren't written to vanity \"code standards\"? You can either layer more turtle wax on your code, or get back to work on the engine.\r\n\r\n","controversiality":0,"created_utc":1165527344,"author_flair_css_class":null,"score":23,"ups":23,"subreddit":"programming","edited":false,"id":"cu1e1","parent_id":"t3_u0r5","author_flair_text":null,"author":"ThomasPtacek","retrieved_on":1473808029,"distinguished":null,"gilded":0,"timestamp_epoch":1566236762,"message_id":"14636-2d360869-8725-48dc-950c-da37ea3980a8-1566236762"}