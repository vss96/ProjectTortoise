{"subreddit_id":"t5_2fwo","link_id":"t3_usc1","stickied":false,"controversiality":0,"body":"'Consing' is Lisp jargon for 'memory allocation', particularly allocation of many objects that are rapidly discarded because of the form of your algorithm.\r\n\r\nThe term is a bit archaic, because string allocation in modern Lisp does not involve a call to the function CONS, which CONStructs dotted pairs, including those forming the 'backbone' of Lisp lists. (Ancient Lisps had to use lists of one-character symbols to simulate strings, though.) \r\n\r\nIf you are processing lists, one optimization is to use destructive mutation of the pairs making up the lists, to avoid 'CONSing up' a fresh backbone of cons cells, while simply discarding the old. The most classic example of the optimization is the implementation of NREVERSE.","ups":3,"score":3,"author_flair_css_class":null,"created_utc":1166188999,"subreddit":"programming","edited":false,"id":"cuwbj","parent_id":"t1_cuup4","author_flair_text":null,"author":"sickofthisshit","distinguished":null,"retrieved_on":1473808609,"gilded":0,"timestamp_epoch":1566236769,"message_id":"30307-823f7bd5-2b79-4a6e-9dcd-dc87f91b9551-1566236769"}