{"stickied":false,"link_id":"t3_u5jo","subreddit_id":"t5_2fwo","body":"It completely depends on your problem domain whether a language is a realistic option. Some reasons, and these would not be misconceptions, that a language could be considered \"unrealistic\" that i can think of are:\r\n\r\nLanguage is not popular enough: It's either more difficult to find someone else to join your team and start coding or it's more difficult for your employer to find someone to maintain the code after you leave. There are also less knowledge of best practices that you can consult to avoid pitfalls or choose between different ways of solving your problem. It also leads to...\r\n\r\nNumber of libraries / size of community is too small: Now you're spending too much time developing tools instead of solving your problem.\r\n\r\nI love haskell (it's now my first choice for most of my own projects) but i do not expect to replace much of the perl infrastructure at work with haskell code, that would be stupid (although it would be great job security), no one else knows it, hiring haskell programmers is hard and there is no CPAN to solve my library problems.\r\n\r\nI think your friend means it's not realistic to expect to get a job working in those languages, possible, but not likely. If you're talking about being self employed, wanting job security through obsfucation and always working solo then they are probably pretty \"realistic\".\r\n\r\n","controversiality":0,"created_utc":1165607280,"author_flair_css_class":null,"score":8,"ups":8,"subreddit":"programming","parent_id":"t1_cu5k2","edited":false,"id":"cu5pw","author":"freshhawk","author_flair_text":null,"retrieved_on":1473808111,"distinguished":null,"gilded":0,"timestamp_epoch":1566236763,"message_id":"16815-04724b65-f30d-4087-a113-fefbcde17122-1566236763"}