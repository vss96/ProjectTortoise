{"parent_id":"t3_w6n9","id":"cw77n","edited":false,"author_flair_text":null,"author":"cyphr555","retrieved_on":1473809506,"distinguished":null,"gilded":0,"link_id":"t3_w6n9","stickied":false,"subreddit_id":"t5_2fwo","controversiality":0,"body":"My favorite tutorial linked there is the [Hitchhiker's tutorial](http://www.haskell.org/haskellwiki/Hitchhikers_guide_to_Haskell). From the intro:\r\n\r\n&gt;Recent experiences from a few of my fellow C++/Java programmers indicate that they read various Haskell tutorials with \"exponential speedup\" (think about how TCP/IP session starts up). They start slow and cautious, but when they see that the first 3-5 pages do not contain \"anything interesting\" in terms of code and examples, they begin skipping paragraphs, then chapters, then whole pages, only to slow down - often to a complete halt - somewhere on page 50, finding themselves in the thick of concepts like \"type classes\", \"type constructors\", \"monadic IO\", at which point they usually panic, think of a perfectly rational excuse not to read further anymore, and happily forget this sad and scary encounter with Haskell (as human beings usually tend to forget sad and scary things).\r\n\r\n&gt;This text intends to introduce the reader to the practical aspects of Haskell from the very beginning (plans for the first chapters include: I/O, darcs, Parsec, QuickCheck, profiling and debugging, to mention a few). The reader is expected to know (where to find) at least the basics of haskell: how to run \"hugs\" or \"ghci\", that layout is 2-dimensional, etc. Other than that, we do not plan to take radical leaps, and will go one step at a time in order not to lose the reader along the way.\r\n\r\nI wish there was something like this for every language.","author_flair_css_class":null,"created_utc":1167262557,"score":10,"ups":10,"subreddit":"programming","timestamp_epoch":1566236779,"message_id":"53975-f2f1fafe-cf8c-4347-a8a8-99420b9ee829-1566236779"}