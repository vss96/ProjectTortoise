{"body":"Here's an analogy that should be more understandable.\r\n\r\nSend 5,000 troops to Iraq = POST. Now there are 5,000 troops in Iraq. RePOST that request, and now there are 10,000 troops in Iraq. So, you had better danged sure know you mean it if you rePOST. That's the scary-powerful type of thing you'd want to use POST for.\r\n\r\nSend Jim Owens to Iraq = PUT. Now Jim Owens should be in Iraq. Not sure he got there? RePUT. No biggie, because only one Jim Owens can be in Iraq. That's good use for PUT.\r\n\r\nNow pretend you're an overworked office admin to some defense bureaucrat processing these requests. You get a memo saying a POST might not have gone through. There goes your day and thousands of taxpayer dollers, because POST is not the type of thing you screw around with. You'll have to verify what in fact did or did not happen.\r\n\r\nBut say you get a memo that a PUT request didn't go through. Since you know that PUT operations are safe to repeat, you can just repeat the request, saving yourself time and saving taxpayer dollars.\r\n\r\nThat's the value of PUT (and DELETE), not in how it's implemented, but in the expectations surrounding it.","controversiality":0,"stickied":false,"link_id":"t3_wc4o","subreddit_id":"t5_2fwo","subreddit":"programming","created_utc":1167429459,"author_flair_css_class":null,"score":2,"ups":2,"author_flair_text":null,"author":"greim","id":"cwegc","edited":false,"parent_id":"t3_wc4o","gilded":0,"retrieved_on":1473809641,"distinguished":null,"timestamp_epoch":1566236780,"message_id":"57624-b75c01bb-3001-4ea7-897b-485c79d669bb-1566236780"}