{"gilded":0,"distinguished":null,"retrieved_on":1473808414,"author_flair_text":null,"author":"csi95","edited":false,"id":"culrq","parent_id":"t1_cule6","subreddit":"programming","ups":3,"score":3,"author_flair_css_class":null,"created_utc":1165949609,"controversiality":0,"body":"The fact is, it's almost impossible to come up with a 100% effective solution that's still accessible.  You point out a number of good tricks to defeat CAPTCHA.  It's the old Castle and Siege problem.  With enough determination, even the most secure Castle can be breached.\r\n\r\nThe solution that I believe gives the best bang for the buck is a question and answer entry.  The Multiple Choice option they list has it's downfall in the limited choices.  Using an empty text box instead opens up infinite possibilities.\r\n\r\nFor example, ask a question like \"What animal is considered Man's Best Friend?\" or \"What city is home to the Eiffel Tower?\".  A human can easily answer these questions with 'dog' or 'paris', but it would be much more difficult for a bot to create an accurate answer.\r\n\r\nSeveral things can be done to make the questions more difficult.\r\n\r\n1.  Have a large database of questions.  250 questions, for example.\r\n\r\n2.  Display the questions as images, not text.  That would require the bot to OCR the image just to get a hint at what the answer might be.\r\n\r\n3.  Rotate new questions in regularly.\r\n\r\n4.  Most Importantly -- Lock out users with more than 5 bad attempts.  If you are entering a Userid along with the CAPTCHA, lock that account.  If not, lock that IP Address.  This will either stop a bot from guessing thousands of times, or at least slow them down.\r\n\r\nAgain, nothing is perfect, but using an approach like this does give you a good mix of security and accessibility.\r\n\r\nDid I miss anything?","subreddit_id":"t5_2fwo","link_id":"t3_ujbj","stickied":false,"timestamp_epoch":1566236767,"message_id":"25326-3cb007a0-10dd-44ad-a0ad-c1f39738ad9e-1566236767"}