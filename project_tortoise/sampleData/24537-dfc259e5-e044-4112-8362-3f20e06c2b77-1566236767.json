{"score":6,"ups":6,"author_flair_css_class":null,"created_utc":1165923030,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_uhgd","stickied":false,"body":"&gt; ONE of my objections is that I don't like bondage and discipline in my programming language syntax.\r\n\r\nWhat's more bondage and discipline:  requiring indentation, or requiring additional redundant block delimiters even when the code's indented anyway?\r\n\r\n&gt; I don't like being forced by the language to follow someone's idea of appropriate indenting style [...]\r\n\r\n\"Indenting style\" in curly-brace languages is mostly concerned with where you place the obtrusive block delimiters, not with any actual indenting.  (Try taking all the different C indenting styles, and delete the curly braces:  they come out exactly the same.)  In other words, Python has no \"indenting\"/delimiter-placement style simply because there are no delimiters to place.\r\n\r\n(Compare with Lisp, which has delimiters, but also only one obvious way of indenting.  Strictly speaking, you can indent according to some other style, but it's akin to wearing your underpants on your head.)\r\n\r\n&gt; I like more choices; Pythoners and their TOOWTDI principle generally don't.\r\n\r\nDon't forget that the \"OO\" stands for \"One Obvious\", not \"Only One\".  Pythoneers love choices (look at the sheer number of web frameworks and WSGI, or the number of MySQL/PostgreSQL/SQLite interfaces and DB-API);  they just don't like unnecessary choices.","controversiality":0,"distinguished":null,"retrieved_on":1473808380,"gilded":0,"edited":false,"parent_id":"t1_cujcl","id":"cuk02","author_flair_text":null,"author":"pjdelport","timestamp_epoch":1566236767,"message_id":"24537-dfc259e5-e044-4112-8362-3f20e06c2b77-1566236767"}