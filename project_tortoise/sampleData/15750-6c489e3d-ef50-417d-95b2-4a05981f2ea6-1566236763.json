{"author_flair_text":null,"author":"Gotebe","id":"cu3jt","edited":false,"parent_id":"t3_u1h2","gilded":0,"distinguished":null,"retrieved_on":1473808070,"body":"A simple explanation why/when this works: if the function usually performs a task OK, one should not have to write error handling when calling it.\r\n\r\nIt's easy to argue that X% of the time (where X is close to 100) function call succeeds. If so, it's plain stupid to be forced to write error handling after each call. I repeat, it's **stupid**!\r\n\r\nNow, if the call fails, what can be done about that? Same X% of the time one can do squat and can't continue. Just go and read some C code, it's full of\r\n\r\nif (funcFailed())\r\n\r\n{\r\n\r\n  // cleanup\r\n\r\n  return ERROR;\r\n\r\n}\r\n\r\nor \r\n\r\nif (funcFailed()) goto cleanup;\r\n\r\n...\r\n\r\ncleanup:\r\n  // cleanup\r\n\r\n  return ERROR;\r\n\r\nAgain, it's plain **stupid** having to write even that, however easy it may be (it's not always easy).\r\n\r\nFunction written to throw in case of problems fits this perfectly. Error handling points are rare and easily found. \r\n\r\nThe only problem is not to lose contextual info about the error (Index out of bounds: yeah, that's helpful). However, stack traces in modern environments help a bunch.\r\n\r\nAnd, exogen's comment about the judgement call must not be forgotten. (FindXYZ should return null/Nothing/rien/ничто and not blow)","controversiality":0,"subreddit_id":"t5_2fwo","link_id":"t3_u1h2","stickied":false,"subreddit":"programming","score":1,"ups":1,"author_flair_css_class":null,"created_utc":1165576153,"timestamp_epoch":1566236763,"message_id":"15750-6c489e3d-ef50-417d-95b2-4a05981f2ea6-1566236763"}