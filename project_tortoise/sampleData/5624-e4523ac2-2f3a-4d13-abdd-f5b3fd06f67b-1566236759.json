{"gilded":0,"distinguished":null,"retrieved_on":1473807665,"author_flair_text":null,"author":"neilc","id":"cthrg","edited":false,"parent_id":"t1_cthpz","subreddit":"programming","score":16,"ups":16,"created_utc":1165190995,"author_flair_css_class":null,"controversiality":0,"body":"Postgres does fork a backend per client connection. There are various tradeoffs to doing this: threads are faster to startup and allow easier sharing of data between backends, but processes are more reliable (since they have address space protection) and more portable among Unixen. The topic has been debated to death, I won't rehash it here -- but I'd personally consider using processes + fork() more of a feature than a bug.\r\n\r\n&gt; I can have thousands of simultaneous and rapidly connecting client connections to my MySQL server\r\n\r\nNot if any of those backends are doing a non-trivial amount of work. AFAIK, the per-backend memory overhead of spawning multiple processes versus multiple threads isn't *too* bad, assuming copy-on-write. But in any case, it is true that you probably can't efficiently support thousands of concurrent users on PostgreSQL.","subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_tgj7","timestamp_epoch":1566236759,"message_id":"5624-e4523ac2-2f3a-4d13-abdd-f5b3fd06f67b-1566236759"}