{"gilded":0,"distinguished":null,"retrieved_on":1473808390,"author_flair_text":null,"author":"sethg","edited":false,"id":"cukgy","parent_id":"t3_uhc2","subreddit":"programming","score":0,"ups":0,"author_flair_css_class":null,"created_utc":1165931996,"controversiality":0,"body":"It used to be that using inner classes in Java created a security hole.  From the JVM's point of view, an inner class was just another class, and if the inner class needed access to its containing class's private parts, the compiler would add a package-scoped accessor function to the containing class.  Any Java code that tried to use such an accessor would be rejected by the compiler, but if you wrote your own JVM bytecode...you can guess the rest.\r\n\r\nSo I'm wondering: has this hole been plugged yet?  And does the support for scripting languages create any other loopholes or interesting interactions with Java's security model?","subreddit_id":"t5_2fwo","link_id":"t3_uhc2","stickied":false,"timestamp_epoch":1566236767,"message_id":"24725-e3c27f84-2962-4a47-a454-698d27b667b9-1566236767"}