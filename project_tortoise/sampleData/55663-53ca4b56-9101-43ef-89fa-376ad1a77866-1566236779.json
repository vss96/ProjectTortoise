{"body":"&gt;&gt; Better meta-programming. The Ruby interpreter takes raw strings as input, a Lisp compiler S-expressions. If you do meta-programming in Ruby, you often end up building up a string and then eval'ing it, which is hacky compared to Lisp's macros.\r\n\r\n&gt; This is absolutely not true. See what _why has to say about `class &lt;&lt; self`. Chunky Bacon.\r\n\r\nI dunno what he says about meta-classes. But often the obvious solution is to use eval. And in practice (all LOC are with empty and comment lines):\r\n\r\nRails, ~6k LOC: 17 uses of eval.\r\n\r\nOne of my projects, ~12k LOC: 22 uses of eval.\r\n\r\nversus:\r\n\r\nVarious OS Common Lisp libraries I have downloaded, ~25k LOC: one use of eval. And note that eval in CL takes an S-expression not a string.","controversiality":0,"subreddit_id":"t5_2fwo","link_id":"t3_w6m0","stickied":false,"subreddit":"programming","score":2,"ups":2,"author_flair_css_class":null,"created_utc":1167343957,"author":"shit","author_flair_text":null,"edited":false,"id":"cwaob","parent_id":"t1_cw74a","gilded":0,"distinguished":null,"retrieved_on":1473809569,"timestamp_epoch":1566236779,"message_id":"55663-53ca4b56-9101-43ef-89fa-376ad1a77866-1566236779"}