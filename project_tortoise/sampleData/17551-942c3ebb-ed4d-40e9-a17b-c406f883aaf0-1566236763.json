{"distinguished":null,"retrieved_on":1473808134,"gilded":0,"parent_id":"t3_u5oc","edited":false,"id":"cu6x3","author":"[deleted]","author_flair_text":null,"score":6,"ups":6,"created_utc":1165627856,"author_flair_css_class":null,"subreddit":"programming","subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_u5oc","body":"Conversely, what features of functional programming languages eliminate the need for \"design patterns\"?\r\n\r\nI offer you a challenge or learning exercise. Fiddle around with a functional language for a while - just the basics. Then learn what \"partial application\" is (aka function currying).\r\n\r\nHold the thought and internalise it. Now pick up your favourite design patterns book. Flick through it and mark somehow each design pattern that is eliminated, just by the simple concept of partial application.\r\n\r\nLook at your results and be astonished. Now rinse and repeat. That is, learn what a higher-order function is for example then do same again. You will soon realise that your entire book is replaceable just by some fundamental programming concepts that are missing from mainstream.\r\n\r\nThen, transcend what your book portrays and learn \"non-fundamental\" concepts.\r\n\r\nStrange isn't it?\r\n\r\nIt all comes down to your objective and value system - is it \r\na) make lots of money\r\nb) learn how to program a computer\r\n\r\nIt is unfortunate that the two are at contradiction, but there is no doubt in my mind, that if my primary objective was a), that I could write a book, place a nice appealing euphemism on the front cover and live a financially fruitful lifestyle. It is not an attack against those who subscribe to either value system - rather, noting that the two are in contradiction and I personally select b) and as a result I cannot also select a). You select what you will.\r\n\r\n&lt;/rant&gt;","controversiality":0,"timestamp_epoch":1566236763,"message_id":"17551-942c3ebb-ed4d-40e9-a17b-c406f883aaf0-1566236763"}