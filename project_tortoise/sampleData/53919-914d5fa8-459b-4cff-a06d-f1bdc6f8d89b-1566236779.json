{"controversiality":0,"body":"&gt;Better meta-programming. The Ruby interpreter takes raw strings as input, a Lisp compiler S-expressions. If you do meta-programming in Ruby, you often end up building up a string and then eval'ing it, which is hacky compared to Lisp's macros.\r\n\r\nThis is absolutely not true. See what _why has to say about `class &lt;&lt; self`. Chunky Bacon.\r\n\r\n&gt;A better programming environment that enables you to program in an iterative style, i.e. write a function, compile it, test it in the REPL without permanently restarting or recompiling the whole program. Although if you want a free one, the only option is Emacs + Slime. Of course any editor would suffice, but you lose some of Lisp's advantages.\r\n\r\nI don't know of anything that works quite this way for Ruby, but there's absolutely no reason you couldn't do this. Ruby allows you to augment classes and overwrite methods at runtime and has an REPL of its own.","stickied":false,"link_id":"t3_w6m0","subreddit_id":"t5_2fwo","subreddit":"programming","created_utc":1167260565,"author_flair_css_class":null,"score":2,"ups":2,"author_flair_text":null,"author":"jsolson","parent_id":"t1_cw6uv","id":"cw74a","edited":false,"gilded":0,"retrieved_on":1473809503,"distinguished":null,"timestamp_epoch":1566236779,"message_id":"53919-914d5fa8-459b-4cff-a06d-f1bdc6f8d89b-1566236779"}