{"gilded":0,"retrieved_on":1473809545,"distinguished":null,"author":"praetorian42","author_flair_text":null,"parent_id":"t3_w995","edited":false,"id":"cw9dc","subreddit":"programming","created_utc":1167322071,"author_flair_css_class":null,"score":9,"ups":9,"body":"The first part (Software as Spec) is dead-on.  I've run into the exact same thing.  This is the main reason that people like Joel Spolsky tend to rail against rewrites.  If you're trying to recreate the same system, you will recreate it with its bugs intact and design flaws and everything.\r\n\r\nIt really is better to treat it as a greenfield project, and to ask the question \"We know what the system does now.  But do you want it to do more in some areas?  Less in others?\"  That way you don't recreate unused features and you get a better idea of where the system is going in the future so you don't end up with as much feature creep (which is probably the reason the software is being rewritten in the first place).","controversiality":0,"stickied":false,"link_id":"t3_w995","subreddit_id":"t5_2fwo","timestamp_epoch":1566236779,"message_id":"55029-3848a80d-7b0c-43e0-833a-6717e6988780-1566236779"}