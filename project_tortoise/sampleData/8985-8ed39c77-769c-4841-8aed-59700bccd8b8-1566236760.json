{"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_to4r","body":"Python doesn't have anonymous methods (or at least, there's no syntax for making anonymous methods *easy*), and the `lambda` form can only contain an expression, not a block of statements.  It seems that the pythonic way of applying higher-order functions is to first bind a variable to a function and then call the HOF with that variable in the argument list.\r\n\r\n(I'm not *defending* this design decision, just reporting it.)\r\n\r\nIn a case where the argument to a HOF is the method of a class and clients aren't going to call the method itself, only the HOF that wraps it, programmers were resorting to defining a `foo` method and then putting `foo = decorate(foo)` at the end of it, but as PEP 318 says, that can be confusing for long methods.\r\n\r\nThey could have dealt with this by introducing a `lambda`-like syntax for anonymous methods, but they didn't.","controversiality":0,"score":1,"ups":1,"created_utc":1165331133,"author_flair_css_class":null,"subreddit":"programming","edited":false,"id":"ctp7g","parent_id":"t1_ctood","author":"sethg","author_flair_text":null,"distinguished":null,"retrieved_on":1473807802,"gilded":0,"timestamp_epoch":1566236760,"message_id":"8985-8ed39c77-769c-4841-8aed-59700bccd8b8-1566236760"}