{"distinguished":null,"retrieved_on":1473809661,"gilded":0,"id":"cwfin","parent_id":"t1_cwf6v","edited":false,"author_flair_text":null,"author":"grauenwolf","score":0,"ups":0,"author_flair_css_class":null,"created_utc":1167453405,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_wcxk","stickied":false,"controversiality":0,"body":"With caching, I think it should be left to the developer. It isn't hard to stuff the results of a query into a global, the hard part is knowing which data is safe to cache and which isn't. \r\n\r\nWhat I like about LINQ is you can write relational code like:\r\n\r\nFrom A in Customers Join B in States On A.StateId = B.StateId Where B.Population &gt; 50000 Select A.CustomerName, B.StateFullName\r\n\r\nand it doesn't matter if Customers or States is a collection, database table, or XML document. The langauge understands how to do a join as well as where (in memory or in database) to do it. \r\n\r\nIf this isn't what you are looking for when you say \"Providing relations as first class datatypes instead and connecting them transparently to the database is the way to go.\", I would be interested in hearing what you mean.\r\n\r\n","timestamp_epoch":1566236780,"message_id":"58203-0f5fa884-fbb7-450a-b416-64096e93a845-1566236780"}