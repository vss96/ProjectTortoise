{"created_utc":1165928725,"author_flair_css_class":null,"ups":6,"score":6,"subreddit":"programming","stickied":false,"link_id":"t3_ujj3","subreddit_id":"t5_2fwo","body":"&gt; because 'and' is most probably implemented as macro.\r\n\r\nand that, in turn, is because some people want to be able to use AND and OR in short-cut operation, i.e. not evaluating an operand unless needed, like \r\n\r\n  (let ((val (or (cached-result x y) (long-calculation x y))))))\r\n\r\n\r\n(sorry, may have overdone the closing parens)\r\n\r\nThis short-cutting behaviour requires OR and AND to be special forms. One could argue that it's not very pure, from a language design point of view. E.g., in the statistics language R (which incidentally is very Lisp-like underneath), you have two separate operators for this, one that is short-cutting (&amp;&amp; and ||), and one that is none short-cutting. The latter is used when comparing values across vectors, where shortcutting is pointless. \r\n\r\nedit: there was a typo before, pointed out by jules.  (i had the (or ...) twice, second was superflouous)","controversiality":0,"retrieved_on":1473808386,"distinguished":null,"gilded":0,"id":"cuk8v","edited":false,"parent_id":"t1_cuk68","author":"Megasphaera","author_flair_text":null,"timestamp_epoch":1566236767,"message_id":"24641-39411db3-3a66-49fe-963b-51af6790789b-1566236767"}