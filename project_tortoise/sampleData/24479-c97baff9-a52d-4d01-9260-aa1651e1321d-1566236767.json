{"author_flair_text":null,"author":"eclig","id":"cujum","edited":false,"parent_id":"t3_ujj3","gilded":0,"retrieved_on":1473808379,"distinguished":null,"controversiality":0,"body":"Interesting article.  Most points are worth thinking about in a\r\nteaching context, but in the real world the issues are actually moot:\r\n\r\n* Data types: modern Lisp/Schemes ([SRFI-9](http://srfi.schemers.org/srfi-9/srfi-9.html)) all have records/structures.\r\n* Pattern matching: the are many *portable* implementations of it for\r\n  Lisp/Scheme.\r\n* Quoting: one can use macros for the *really* annoying cases.\r\n* Lazy lists: Scheme supports [promises](http://schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-7.html#%_sec_4.2.5).  It's listed as \"library syntax\" because it can be written in Scheme itself.\r\n\r\nThat's the beauty of Lisp languages: other languages have\r\nOO, pattern matching, or lazy evaluation built in.  They go away when\r\ntheir paradigms are no longer hip and newer, buzzword-compatible\r\nlanguages must come to fill their vacuum.  But Lisp (and Scheme) are *programmable programming languages*.\r\nIn no other language (AFAIK) you combine e.g. [Concurrent ML abstractions](http://s48.org/1.3/manual/manual-Z-H-8.html#node_sec_6.8)\r\nwith [Logic Programming](http://kanren.sourceforge.net/) to solve\r\nproblems.\r\n\r\nSince a \"custom\" version of Scheme is used in SICP anyway, it would no\r\nproblem for the authors to use these \"features\" in the course/book.\r\n\r\nBut this would miss the point: SICP is not (just) about how to\r\n*use* data abstraction facilities of a given programming\r\nlanguage.  It goes further and shows the reader how to design and\r\nimplement such abstraction facilities himself.  It takes the \"voodoo\"\r\nout of programming and shows you that \"the interpreter running your\r\nprogram is just another program.\"  This is IMHO the real contribution\r\nof SICP.\r\n\r\nBTW: skimming over the second half of the article, I could not see\r\nWadler mention how easy (or how difficult) it would be to implement\r\nthe meta-circular evaluator in Miranda.  But maybe I've just oversaw it.\r\n\r\nEdit: typo.\r\n","link_id":"t3_ujj3","stickied":false,"subreddit_id":"t5_2fwo","subreddit":"programming","author_flair_css_class":null,"created_utc":1165919487,"score":9,"ups":9,"timestamp_epoch":1566236767,"message_id":"24479-c97baff9-a52d-4d01-9260-aa1651e1321d-1566236767"}