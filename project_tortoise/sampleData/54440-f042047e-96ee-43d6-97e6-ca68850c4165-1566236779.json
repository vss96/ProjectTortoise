{"gilded":0,"retrieved_on":1473809522,"distinguished":null,"author_flair_text":null,"author":"cratuki","edited":false,"id":"cw81o","parent_id":"t1_cw7hx","subreddit":"programming","author_flair_css_class":null,"created_utc":1167285170,"score":4,"ups":4,"controversiality":0,"body":"I agree that a lot of the effort in ORMs seems to be to create programmers who write worse code and  that this focus is madness. However, there is a legitimate place for ORMs in allowing things that aren't practical in raw SQL.\r\n\r\nHere is an example. You might have a series of web pages in which you build up a hot air balloon booking (for example). You accumulate that data in an object graph (DataContext in Cayenne, EOEditingContext in EOF). Along the way you create a new person to go in the balloon and that takes two screens. So you build that person up in existing \"create person\" screens, and then commit that datacontext back to the master data context which for the moment happens to be the one being used by the booking workflow. Only when the booking is complete do you then commit everything to the database. It's simply not practical to do this with SQL. You need an ORM.","link_id":"t3_w6r6","stickied":false,"subreddit_id":"t5_2fwo","timestamp_epoch":1566236779,"message_id":"54440-f042047e-96ee-43d6-97e6-ca68850c4165-1566236779"}