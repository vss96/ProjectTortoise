{"retrieved_on":1473809503,"distinguished":null,"gilded":0,"edited":false,"id":"cw741","parent_id":"t1_cw6t1","author":"[deleted]","author_flair_text":null,"created_utc":1167260295,"author_flair_css_class":null,"score":3,"ups":3,"subreddit":"programming","stickied":false,"link_id":"t3_w55v","subreddit_id":"t5_2fwo","controversiality":0,"body":"I suppose I've spent about 8 years of my career debugging others' code.  About half of that's been stuff that'd make your head explode, and not in a good way.  For that stuff, it's particularly clear that time spent debugging is a waste--it needs to be rewritten if it's ever to work reliably.\r\n\r\nWith well-written code, I just don't seem to need to drop into the debugger.  Generally, I can contemplate the symptoms for a few minutes, add a few print statements (or assertions) to generate ideas and verify hypotheses, and the solution follows quickly.  It'd take longer just to set up a proper debugging scenario.\r\n\r\nOn occasion, I *do* spend a couple of hours trudging around with a debugger.  Once in a while that'll lead to an insight that'd be hard to get in other ways (e.g., because of a bug in the toolchain), but mostly it ends with a (*groan*) realization that it was a simple problem I could have caught more quickly if I'd have simply thought things through.","timestamp_epoch":1566236779,"message_id":"53914-6d60934f-2b6a-49c4-9720-094b3b36a3c8-1566236779"}