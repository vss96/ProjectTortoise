{"author_flair_css_class":null,"created_utc":1166135731,"score":1,"ups":1,"subreddit":"programming","link_id":"t3_ujj3","stickied":false,"subreddit_id":"t5_2fwo","body":"&gt; &gt; I think you need more than laziness to state that - you need\r\n&gt; &gt; to ban sideeffects too.\r\n\r\n&gt; You don't need to ban side-effects, you support them as \r\n&gt; first-class entities: monads.\r\n\r\nWe have two concepts in play here. Laziness and pureness (i.e. absence of side effects).\r\n\r\nI believe your statement \"With lazy evaluation, all control structures degenerate into pure function application.\" is untrue for a lazy language with side effects.\r\n\r\nThat a program with side effects can be rewritten into monad form (which can be run in a pure language) is irrelevant (interesting, but irrelevant).\r\n","controversiality":0,"retrieved_on":1473808561,"distinguished":null,"gilded":0,"id":"cutqy","edited":false,"parent_id":"t1_cupvl","author":"soegaard","author_flair_text":null,"timestamp_epoch":1566236768,"message_id":"29092-a8eee052-7707-497e-a04d-ac0a519e07b8-1566236768"}