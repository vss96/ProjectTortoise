{"created_utc":1166186974,"author_flair_css_class":null,"score":13,"ups":13,"subreddit":"programming","stickied":false,"link_id":"t3_utqb","subreddit_id":"t5_2fwo","body":"I work with Java all day, and sometimes wish I were working with C++ (+ Python for frontend).  I think a lot has to do with the problem domain.  We're doing a lot of high-performance numerics and memory-mapped IO on the backend with a web frontend.  Java isn't particularly well-suited for either of those: it lacks operator overloading, you usually need to use JNI to call C or assembly libraries anyway, the NIO abstraction leaks so that you need to know what the underlying OS is doing anyway, and Java web development just plain sucks.  If you're doing more run-of-the-mill business apps or any GUI programming, Java *is* nice (though for GUIs, C# is usually better).\r\n\r\n...which just goes to show the importance of problem domain for language choice.  Java is good for the areas it was designed for.  C++ is good for the areas it was designed for.  Neither is particularly useful when you use it outside of common problem domains, or attempt to use it for *the whole project* when the project includes many disparate areas.\r\n\r\nPersonally, I think not enough attention has been paid to cross-language development.  Aside from letting us use Python for the web tier, Java for business objects, and C++ for high-performance computations, this also enforces a clear separation of components, something that's good architecturally anyways.","controversiality":0,"retrieved_on":1473808608,"distinguished":null,"gilded":0,"id":"cuw78","edited":false,"parent_id":"t1_cuvzx","author_flair_text":null,"author":"nostrademons","timestamp_epoch":1566236769,"message_id":"30257-a16be52d-b9e7-4346-a21e-5b8f215ae491-1566236769"}