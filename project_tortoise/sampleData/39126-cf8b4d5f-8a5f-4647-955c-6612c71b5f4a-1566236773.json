{"score":-7,"ups":-7,"author_flair_css_class":null,"created_utc":1166558543,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_vebh","stickied":false,"controversiality":0,"body":"Well, it's not like you said \"OK, first we import the RSS aggregator library and then call rssAggregator.aggregate(urls)\" ;]\r\n\r\nI don't know why, but I can't get past the \"))))))\" or \"]]]]]]\" streams of characters (Scheme/Lisp, Haskell). It bothers me that I can't find a better way of telling the compiler/interpreter \"OK, this call ends 'here'\" than closing 6 open parens (instead of 5 or 7, which would be errors).\r\n\r\nBut, in the spirit of this thread, I humbly present the Java implementation of this aggregator:\r\n\r\n        class SimpleRSSAggregator;\r\n\r\n        import com.my.badass.library.RSSAggregator;\r\n\r\n        public static void main (String[] asArguments) {\r\n            RSSAggregator.main(asArguments);\r\n        }\r\n\r\nWhew. I'll publish my \"com.my.badass.library.RSSAggregator\" library really soon! (In honesty, I'm looking forward to taking a peek at this \"hart\" library you've outlined. It looks a lot like the HTML output formatting used in [UCW](http://common-lisp.net/project/ucw/).)","distinguished":null,"retrieved_on":1473808953,"gilded":0,"id":"cveer","edited":false,"parent_id":"t1_cvedt","author":"sblinn","author_flair_text":null,"timestamp_epoch":1566236773,"message_id":"39126-cf8b4d5f-8a5f-4647-955c-6612c71b5f4a-1566236773"}