{"link_id":"t3_ujj3","stickied":false,"subreddit_id":"t5_2fwo","body":"&gt; What exactly are you asking? A definition of control \r\n&gt; structures in a language that lacks control structures? By \r\n&gt; definition, that is not possible.\r\n\r\nHmm. I think you are right, that the problem is terminology.\r\n\r\nWe were talking about how to define \"if\" as a function in a lazy, impure language using no other control constructs than function application (yes - the question is academic).\r\n\r\n[Side note: the \"no other control constructs than function application\" is why we are discussing, whether pattern matching is a control construct.]\r\n\r\nI was thinking like this: an \"impure\"  language has side-effects, and must therefore also have construct that control the order of these. That's why I insisted on the non-pureness of the language.\r\n\r\nTo make sure I got the terminology right, I dug up my copy of TAPL, and found out that we need to specify which kind of \"impurities\" we are considering, in order for the question to make sense.\r\n\r\nI also looked up \"control construct\" in TAPL, but it wasn't mentioned. I agree that \"control construct\" only makes sense in an imperative language (which I thought were implied by the non-pure restriction). In the imperative setting, I hope we can agree on, that pattern matching is a constrol construct?\r\n\r\nThat pattern matching is a control construct in a strict, impure language is witnessed by the rewrite rule (using Scheme notation):\r\n\r\n  (if a b c) === (match a [#f b] [_ c])\r\n\r\nOr in working code (PLT Scheme):\r\n\r\n(define-syntax my-if\r\n  (syntax-rules ()\r\n    [(my-if a b c)\r\n     (match a [#f c] [_  b])]))\r\n\r\nWhat's left to agree on, is whether pattern matching is a control construct in a lazy, impure language.\r\n\r\nYou mentioned Algol 60 as an example of a non-pure, lazy language - so I experimented a little with the Algol60 language in DrScheme.\r\n\r\nThe following program defines myif in terms if the builtin if. The output is\r\n\r\n&gt; Welcome to DrScheme, version 360.2-svn29nov2006.\r\n&gt; Language: Algol 60.\r\n&gt; 21\r\n&gt; 22\r\n\r\nwhich shows that the \"laziness\" (actually call-by-name)\r\nworks.\r\n\r\nIf pattern matching is allowed, we can replace the use of if  in myif. \r\n\r\nbegin\r\n\r\nprocedure myif(a,b,c); Boolean a; integer b, c;\r\nbegin\r\n  if   a \r\n  then printnln( b )\r\n  else printnln( c );\r\nend;\r\n\r\nprocedure t(dummy);\r\nbegin\r\n  printnln (11);\r\n  t := 12;\r\nend;\r\n\r\nprocedure u(dummy);\r\nbegin\r\n  printnln (21);\r\n  u := 22;\r\nend;\r\n\r\nmyif(1=2, t(1), u(1));\r\n\r\nend","controversiality":0,"author_flair_css_class":null,"created_utc":1166276647,"score":1,"ups":1,"subreddit":"programming","id":"cv0rd","edited":false,"parent_id":"t1_cuzm0","author_flair_text":null,"author":"soegaard","retrieved_on":1473808694,"distinguished":null,"gilded":0,"timestamp_epoch":1566236770,"message_id":"32358-b050bf9f-cc2f-489f-9235-6571c58b86f0-1566236770"}