{"id":"culz3","edited":false,"parent_id":"t1_cull6","author_flair_text":null,"author":"pjdelport","retrieved_on":1473808418,"distinguished":null,"gilded":0,"stickied":false,"link_id":"t3_ujj3","subreddit_id":"t5_2fwo","body":"But that involves specifically reimplementing part of `and`'s functionality;  you might as well drop the pretense and simply say `(not (memq #f l))` instead.  :)  \r\n\r\nTo work with arbitrary macros at run-time, there's really no alternative to having first-class support for them (as found in Scheme dialects like [Kernel](http://web.cs.wpi.edu/~jshutt/kernel.html) and [muSE](http://code.google.com/p/muvee-symbolic-expressions/)).","controversiality":0,"created_utc":1165952236,"author_flair_css_class":null,"score":3,"ups":3,"subreddit":"programming","timestamp_epoch":1566236767,"message_id":"25443-59eebc8c-c3ae-4d26-a972-352001c0ba50-1566236767"}