{"distinguished":null,"retrieved_on":1473809385,"gilded":0,"parent_id":"t1_cw0r1","id":"cw0ze","edited":false,"author":"jerf","author_flair_text":null,"score":11,"ups":11,"author_flair_css_class":null,"created_utc":1167105414,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_w0ju","stickied":false,"body":"You should try to become deeply familiar with at least two entire platforms. In some sense they should be as different as possible, but I think the reality is that when you really get down to it even close neighbors like Python and Perl can look really different in large projects.\r\n\r\nOtherwise you're totally at the mercy of your preferred platform and that's not a safe position.\r\n\r\nFor this purpose, I'm not sure whether it matters whether the second platform is good or bad. Either way it's likely to be very educational.\r\n\r\nYour message doesn't prove that you haven't already done this, so if you have and you still think PHP is your best choice, then that's great. (I _used_ to be able to wholeheartedly condemn PHP, but I haven't kept up with it and it has at least superficially changed a lot, so now I leave that to people who have kept up to condemn it or not. :) ) If you haven't, then you probably won't be able to understand what everyone else is talking about (no offense intended).\r\n\r\nUnfortunately, no platform can be judged without doing a lot of work in it. Things that seem like the most awesome thing ever often turn out to be total disasters after a month of use, and I've used some platforms that couldn't demo anything interesting to save their lives (almost literally in some cases), yet in their domain were a pleasure to work with once I learned them.","controversiality":0,"timestamp_epoch":1566236778,"message_id":"50566-149436f5-405d-4b8b-98b4-3d980ca5d593-1566236778"}