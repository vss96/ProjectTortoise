{"gilded":0,"retrieved_on":1473808493,"distinguished":null,"author":"lysine23","author_flair_text":null,"parent_id":"t1_cuojw","edited":false,"id":"cuq3n","subreddit":"programming","created_utc":1166067254,"author_flair_css_class":null,"score":0,"ups":0,"controversiality":0,"body":"Not in standard Scheme.  The closest I can think of is to do something like this:\r\n\r\n    (let ((record-tag (generate-random-number))\r\n          (old-vector? vector))\r\n      (set! make-record\r\n    \\t(lambda foo\r\n    \\t  (vector record-tag (apply really-make-record     foo))))\r\n      (set! vector? (lambda (v)\r\n    \\t\\t  (if (equal? (vector-ref v 0) record-tag)\r\n    \\t\\t      #f\r\n    \\t\\t      (old-vector? v)))))\r\n\r\nwhere the vector-tag is hidden, but even here, if somebody matches it somehow, they can do (vector vector-tag ...) and vectors and records aren't disjoint.\r\n\r\nIf you had gensym you could do it.","stickied":false,"link_id":"t3_ujj3","subreddit_id":"t5_2fwo","timestamp_epoch":1566236768,"message_id":"27373-5c95f8c6-31f4-4aec-b6b7-f16ecb92882c-1566236768"}