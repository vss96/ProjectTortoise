{"subreddit":"programming","created_utc":1165606176,"author_flair_css_class":null,"score":1,"ups":1,"controversiality":0,"body":"It's not so much about the standard library being able to be upgraded on the fly, it's about code *based on* standard library constructs. Essentially all code you write in Erlang can be upgraded on the fly without hassle, for many reasons. The same can not be said about Stackless given Python's standard library. It wasn't designed with those constraints.\r\n\r\nIf a live process breaks in an Erlang system, then it crashes and is restarted by its supervisor with the previous state. After a certain number of failures over a given amount of time then you have to manually restart it.\r\n\r\nNote that you can do disparate architectures on different machines in Erlang too, but you don't have to write any code to make that happen...","stickied":false,"link_id":"t3_u2ng","subreddit_id":"t5_2fwo","gilded":0,"retrieved_on":1473808110,"distinguished":null,"author":"etrepum","author_flair_text":null,"parent_id":"t1_cu3ya","edited":false,"id":"cu5na","timestamp_epoch":1566236763,"message_id":"16771-d9effbcf-f475-47b7-ba3d-59b5f8369e2b-1566236763"}