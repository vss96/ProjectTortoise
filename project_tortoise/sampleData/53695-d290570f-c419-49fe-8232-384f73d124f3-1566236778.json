{"distinguished":null,"retrieved_on":1473809496,"gilded":0,"id":"cw6q8","parent_id":"t1_cw6m1","edited":false,"author":"mrevelle","author_flair_text":null,"score":3,"ups":3,"author_flair_css_class":null,"created_utc":1167252908,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_w6m0","stickied":false,"controversiality":0,"body":"Know what you mean...\r\n\r\nI think of Lisp as a programmable Python or Ruby that can be compiled to native code and has richer development tools.  The integration between development and runtime environments that Emacs/SLIME provides is awesome.\r\n\r\nThe programmable part is what makes Lisp \"better\" than the mainstream (Java, C#, Python, etc.) languages.\r\n\r\nBy programmable I mean using macros to define your own syntax and control structures.  For example, if the language didn't supply (it does, *cond*) a multibranch conditional (think if-elsif-statements or a switch statement) you could write your own.  In fact, the Common Lisp standard implements *cond* with a macro.\r\n\r\nReading [*Practical Common Lisp*](http://www.gigamonkeys.com/book/) is a great way to learn more.","timestamp_epoch":1566236778,"message_id":"53695-d290570f-c419-49fe-8232-384f73d124f3-1566236778"}