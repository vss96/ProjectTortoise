{"retrieved_on":1473808157,"distinguished":null,"gilded":0,"edited":false,"id":"cu85q","parent_id":"t1_cu7xz","author_flair_text":null,"author":"Entropy","created_utc":1165664354,"author_flair_css_class":null,"score":-3,"ups":-3,"subreddit":"programming","stickied":false,"link_id":"t3_u5es","subreddit_id":"t5_2fwo","body":"&gt;Rails is not a very popular framework in the grand scheme of things.\r\n\r\nIncorrect; troll. Rails is so popular it boosted Ruby adoption quite a bit. Rails is so popular that rails-inspired frameworks started popping up in different languages. Rails is so popular that Django is described as being similar to rails instead of the other way around. Rails is so popular and well-liked that it chilled framework development for Ruby.\r\n\r\n&gt; Python on the other hand has a large (in comparison to ruby) user base,\r\n\r\nCorrect\r\n\r\n&gt; many large proven deployed projects,\r\n\r\nSo does Rails\r\n\r\n&gt; and many web frameworks.\r\n\r\nSo does Ruby. Nobody uses them, however, because Rails has consumed most of the available Ruby mindshare.\r\n\r\n&gt; I am not sure that I would rush to emulate the ruby worlds view of how many web frameworks is right.\r\n\r\nComplete rubbish. You act as if there's some dark cabal of Rubyists issuing edicts to the effect of \"THERE SHALL BE ONE FRAMEWORK AND NO OTHERS BEFORE IT\". There was no group decision made for things to turn out this way; Rails just got *really* popular in a short span of time.\r\n\r\n&gt; The last time I checked competition was generally thought of as a good thing, spurring innovation, and the 'central planning &amp; one implementation school' had died a death.\r\n\r\nThis is fucking ridiculous. To begin with, I cannot conceive of how you arrived at such a position when both Ruby and Rails are *fucking open source apps.* Nobody is forcing people to work on or with Rails. There is no central Ruby bureaucracy allocating developer hours to Rails in favor of other frameworks. Even if there were, your statement would *still* be wrong. I'd rather have 1 really good framework than 6 half-implementations. To take it even furthur, the entire competing sub-groups concept is arguable to begin with; divide and conquer is what you're trying to do to the opposing army, not your own. Talk all you want of Darwin; the fact remains that Ruby is a small ecosystem where the dominant lifeform has already emerged. The competition already happened. You blinked. You missed it.\r\n\r\n&gt; It beats the hell out of me why only having one real web framework is seen as one of rubys advantage.\r\n\r\nI don't know, maybe because it's a good framework?\r\n\r\n&gt; To me it says writing web frameworks in ruby is either insanely hard,\r\n\r\nThis is where I decided to call you an asshole.\r\n\r\n&gt; or simply unwanted. Surely if it was easy , or significant demand existed, there would be many of them.\r\n\r\nRuby doesn't have a huge number of developers. This is explanation enough right here, but we can take it furthur. Ruby has a fully functional, actively maintained, popular, good, full stack web framework. Ruby does not have a surfeit of libraries. I'd much rather somebody spend some time getting SOAP interop closer to 100% than churning out Yet Another Web Framework.\r\n\r\n&gt; Only one web framework\r\n\r\nThere is Rails, Camping, and Nitro. Borges was a Seaside port, but I don't think it's being maintained.\r\n\r\n&gt; looks like a lack of experimentation and original thought to me.\r\n\r\nDon't be dense. Rails is to metaprogramming what Seaside is to continuations. Neither are terribly arcane to the initiated, but building a web framework around them was at least somewhat innovative. Web frameworks are less about innovation and more about solid design, anyhow.","controversiality":1,"timestamp_epoch":1566236764,"message_id":"18246-946c1a05-5722-4af5-8d2b-c738b2ce3b18-1566236764"}