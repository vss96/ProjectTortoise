{"parent_id":"t3_w0ju","edited":false,"id":"cw11v","author":"nostrademons","author_flair_text":null,"distinguished":null,"retrieved_on":1473809387,"gilded":0,"subreddit_id":"t5_2fwo","link_id":"t3_w0ju","stickied":false,"controversiality":0,"body":"Past projects okay?  I'm working for The Man right now, trying to build up savings so I can survive a few failures on my own.\r\n\r\n* inAsphere.com (now defunct): Perl CGI.  That was basically all I knew at the time, and it seemed well-suited for the web.  Besides, we used Links + UBB for other areas of the site, both Perl programs.\r\n* [Fictionalley.org](http://www.fictionalley.org/): PHP4.  PHP5 wasn't out at the time.  This was a tough choice between Java and PHP.  We went with PHP because:\r\n\r\n    1. All other software then in use (vBulletin, vbPortal) was PHP, which would let us take all other Apache modules out of the server process.  We were pretty strapped for memory at the time\r\n    2. The team consisted of 2 experienced programmers who could use just about anything, and a half a dozen folks who picked up HTML from LiveJournal customization.  It was not realistic to expect them to learn Java or any other mainstream language; even PHP was a bit of a stretch\r\n    3. As a nonprofit, volunteer organization, any future coders were much more likely to know PHP than any other language.  I didn't want to be tied to a job that didn't pay me.  (As it so happened, I got stuck with it for 3 years or so anyway, and my replacement ended up being a .NET fan.  C'est la vie.  In some ways, I was right though, as there are 3-4 other people who regularly do programming for it and probably would not be able to if it were in a language other than PHP.)\r\n    4. PHP had good, easy libraries for the things we wanted to do - database access, templating, PDF generation, RSS.\r\n\r\n* [Scrutiny](http://www.amherst.edu/~scrutiny/) is in PHP, because I wanted to finish it all up over Thanskgiving break (I succeeded, BTW).  It does absolutely nothing fancy, but it got the job done and didn't take me a whole lot of time.  Also, it's proven maintainable by other students (not tied down by this like by FA.org), and I could run it on the college servers, which offer only PHP and CGI.\r\n* My current work project is Java + JSF + Facelets + A4J.  I didn't really have a choice in this, at least on the Java + JSF angle.  It's Java because we have a large backend investment that's all Java.  I also did some prototyping for it with Ruby on Rails (+ MySQL/C++ backend), which went *much* more smoothly, but my boss won't let me use Ruby. :-(\r\n\r\nIf I were starting a startup now, I'd use Python, + SWIG'ed C for any performance-critical parts.  It's well-suited for web development, has a large library selection, doesn't lock you into any particular framework, and yet has a decent number of frameworks that you can pick and choose from should you need their features.  It also seems to attract talented developers, should you need to hire programmers.","score":10,"ups":10,"author_flair_css_class":null,"created_utc":1167107115,"subreddit":"programming","timestamp_epoch":1566236778,"message_id":"50610-25d141a4-73e4-4fe6-b19b-3f1dad442cbe-1566236778"}