{"ups":-1,"score":-1,"author_flair_css_class":null,"created_utc":1167335014,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_w79v","stickied":false,"controversiality":0,"body":"From the article:\r\n\r\n&gt;Haskell has type inference and while this can really make code more compact because the lack of necessary type annotations it also has its downside: A new line somewhere in your code can easily create compiler errors somewhere else.\r\n\r\nCan't say I didn't see that coming.  Type inference is great for cranking out code but it has some serious downsides:\r\n\r\n1.  Its harder to maintain for non-creators (people who wrote the code originally)\r\n\r\n2.  Often times produces errors in large systems that are hard to track down.  Fixing it in one area may produce more bugs.  We can say \"let the compiler do its own work\" but compilers are bad at fixing bugs.\r\n\r\nI'm not crazy about type inference personally, but for smallish projects which you are writing yourself it can be a real time saver.  I like how .NET is implementing type inference with limits.","distinguished":null,"retrieved_on":1473809560,"gilded":0,"edited":false,"id":"cwa3i","parent_id":"t3_w79v","author":"sbrown123","author_flair_text":null,"timestamp_epoch":1566236779,"message_id":"55386-c4d31e98-b857-4814-a80c-34778bc9525a-1566236779"}