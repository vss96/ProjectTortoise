{"author_flair_css_class":null,"created_utc":1165922626,"score":2,"ups":2,"subreddit":"programming","link_id":"t3_uhgd","stickied":false,"subreddit_id":"t5_2fwo","body":"&gt; It affects the language, too. It's part of why lambdas are so royally screwed up in Python. \\[...\\] (since they apparently didn't want to deal with syntax rules for blocks nested in expressions)\r\n\r\nActually, working multiline-lambda syntaxes have been proposed and rejected, because the equivalent `def`s are still generally easier to read.  Statement blocks inside expressions just don't work very well.  (This has more to do with Python's nature as a separate-statements-and-expressions language than it has to do with indentation, though.  For example, Lisp already treats everything as an expression, so the point is moot there.)\r\n\r\n&gt; I use the % command in vi to match braces all the time\r\n\r\nIf you're using Vim, download [python_match.vim](http://www.vim.org/scripts/script.php?script_id=386) to your `~/.vim/ftplugin` (or `$HOME/vimfiles/ftplugin`) directory.  It makes `%` work with Python's structures, as well as adding a few related block motion commands.","controversiality":0,"retrieved_on":1473808380,"distinguished":null,"gilded":0,"parent_id":"t1_cujbh","id":"cujzl","edited":false,"author":"pjdelport","author_flair_text":null,"timestamp_epoch":1566236767,"message_id":"24529-6abc3dd7-86fb-485f-b086-7d5f0af57054-1566236767"}