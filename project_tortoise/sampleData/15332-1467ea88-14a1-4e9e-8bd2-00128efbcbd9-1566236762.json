{"gilded":0,"distinguished":null,"retrieved_on":1473808053,"author":"[deleted]","author_flair_text":null,"edited":false,"id":"cu2ny","parent_id":"t3_u2ng","subreddit":"programming","score":1,"ups":1,"author_flair_css_class":null,"created_utc":1165551556,"body":"The Stackless IRC is just about empty, I don't know where else to ask this, and Reddit has its share of programming geniuses, so I'll ask here.\r\n\r\nStackless supports the idea of 'tasklets', which are basically microthreads that can be stopped, resumed, even pickled up and transported to be used on other computers (architectures even, see [here](http://holdenweb.blogspot.com/2006/11/stackless-python-continues-to-amaze.html)).\r\n\r\nNow my question is, can Stackless using tasklets and channels be used in the same manner as Erlang? Would you get the same kind of advantages in concurrency and distributed programming? Is there something that Erlang does better? Can a [Mnesia](http://www.erlang.org/doc/doc-5.0.1/lib/mnesia-3.9.2/doc/index.html) be built in Stackless?\r\n\r\nCause I gotta be honest, the idea of using something with the same simplicity and support for concurrency/distributed programming as Erlang along with the libraries, syntax, and support of Python, is *very* interesting.","controversiality":1,"subreddit_id":"t5_2fwo","link_id":"t3_u2ng","stickied":false,"timestamp_epoch":1566236762,"message_id":"15332-1467ea88-14a1-4e9e-8bd2-00128efbcbd9-1566236762"}