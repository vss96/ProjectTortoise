{"controversiality":0,"body":"This behaviour is consistent in the light of type checking. An uninitialised variable is not a type error, its value is an undetermined object in the set of its type. When you cast something to (void*) you pretty much discard its type. And although that is an extremely dangerous thing to do, it is not wrong in the light of the type system. `int a = 5 / 0` forces the program to cram a non-int value in an int, which is a type error. The only problem is this can't be checked statically. Which is why the program will raise an exception. But it is still a type error.\r\n\r\nSo that is the reason it is critical. :-) If you absolutely want to divide by zero you should cast to a type which can store the result, like beza1e1 pointed out.","link_id":"t3_tzna","stickied":false,"subreddit_id":"t5_6","subreddit":"reddit.com","author_flair_css_class":null,"created_utc":1165537666,"score":1,"ups":1,"author":"rule","author_flair_text":null,"id":"cu200","parent_id":"t1_cu1uv","edited":false,"gilded":0,"retrieved_on":1473808041,"distinguished":null,"timestamp_epoch":1566236762,"message_id":"14957-72d28b2c-4c1f-4552-ba2e-ed0df51c6f96-1566236762"}