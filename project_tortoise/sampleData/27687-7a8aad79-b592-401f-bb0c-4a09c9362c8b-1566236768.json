{"gilded":0,"distinguished":null,"retrieved_on":1473808507,"author_flair_text":null,"author":"eclig","parent_id":"t1_cuq3n","id":"cuqt9","edited":false,"subreddit":"programming","score":3,"ups":3,"created_utc":1166087446,"author_flair_css_class":null,"body":"Use a closure as tag and make the test with `eq?':\r\n\r\n       (define make-record #f)\r\n       (define record? #f)\r\n\r\n       (let ((record-tag (lambda () #f))\r\n             (old-vector? vector?))\r\n         (set! make-record\r\n               (lambda foo\r\n                 (vector record-tag foo)))\r\n         (set! record?\r\n               (lambda (thing)\r\n                 (and (old-vector? thing)\r\n                      (eq? (vector-ref thing 0) record-tag))))\r\n         (set! vector?\r\n               (lambda (thing)\r\n                 (and (old-vector? thing)\r\n                      (not (record? thing))))))\r\n\r\n       (define my-rec (make-record 'zzz 42))\r\n       (record? my-rec)                        ; =&gt; #t\r\n       (vector? my-rec)                        ; =&gt; #f\r\n       (record? (vector (lambda () #f) 'zzz 42)) ; =&gt; #f\r\n\r\nEdit: markup","controversiality":0,"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_ujj3","timestamp_epoch":1566236768,"message_id":"27687-7a8aad79-b592-401f-bb0c-4a09c9362c8b-1566236768"}