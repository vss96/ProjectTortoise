{"id":"ct6ih","edited":false,"parent_id":"t1_ct6h7","author":"ecuzzillo","author_flair_text":null,"distinguished":null,"retrieved_on":1473807452,"gilded":0,"subreddit_id":"t5_2fwo","link_id":"t3_t6gz","stickied":false,"body":"MIT's OpenCourseWare is a start. In general, there is a set of topics you learn in a good CS curriculum-- go to any top-4 department website, e.g. http://www.csd.cs.cmu.edu/education/bscs/currreq.html\r\nto get an idea of the topics. The important ones for your particular line of work depend on what you're doing. You should have a solid knowledge of at least one higher-level language (any of Common Lisp, Scheme, SML, Ocaml, Haskell, Erlang (I think), or the like will do the trick). For any kind of Internet-related startup, you should have a good knowledge of networking and parallel programming, such as what one would get in a networking class and a parallel class. Basic background in statistics. Basic knowledge of machine architecture (must know assembler, must know what an ALU is). \r\nSignificantly deep knowledge of complexity theory, graph theory, combinatorics, and generally be able to follow the conversation when a CS theory nerd starts rambling (This is deemed useful even by systems people.). \r\n\r\nThat's most of it, aside from just being a hacker, which you learn from hacking.","controversiality":0,"score":2,"ups":2,"author_flair_css_class":null,"created_utc":1164941543,"subreddit":"programming","timestamp_epoch":1566236758,"message_id":"376-a021185e-172e-480f-8bc4-455e0f5aff08-1566236758"}