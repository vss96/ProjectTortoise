{"distinguished":null,"retrieved_on":1473809435,"gilded":0,"edited":false,"parent_id":"t1_cw3kt","id":"cw3mb","author":"[deleted]","author_flair_text":null,"score":2,"ups":2,"author_flair_css_class":null,"created_utc":1167176753,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_w0co","stickied":false,"controversiality":0,"body":"&gt; d) the platform inhibits the largest maintenance killer\r\n&gt; around, egotistical programmers developing too clever\r\n&gt; solutions to problems which would actually require a simple\r\n&gt; and robust solution which can be maintained. This is why\r\n&gt; some developers dislike the language, because it doesn't\r\n&gt; let them feel clever on the expense of the actual\r\n&gt; objectives.\r\n\r\nMore bullshit. Java has serious problems expressing abstractions needed for many problem domains. If you think that's just \"programmers being clever\", go back to COBOL.\r\n\r\nI've never seen a code base become unmaintainable because abstractions were introduced which bring the code closer to the problem being solved. I've seen plenty of Java-Joe boilerplate code where one must scroll through 4000 lines to find any semblance of work being done, though. And /that/ is the real maintenance killer.","timestamp_epoch":1566236778,"message_id":"51943-d0238991-700c-476e-ae09-fda8a1519bc4-1566236778"}