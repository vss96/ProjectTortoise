{"gilded":0,"retrieved_on":1473809387,"distinguished":null,"author":"jerf","author_flair_text":null,"id":"cw108","edited":false,"parent_id":"t1_cw070","subreddit":"programming","created_utc":1167106153,"author_flair_css_class":null,"score":13,"ups":13,"controversiality":0,"body":"I've learned that one of the most important aspects of a language is the culture around it, which affects it immensely as it develops. It's hard to point at because it manifests in little ways and there's some subjectivity to it, but I'm pretty sure it's real.\r\n\r\nI'm tempted to start walking through all the cultures I know, but that seems like a guaranteed flame war. To put it lightly.\r\n\r\nSo I'll just stick with my impressions of Python: A culture full of people who have been around a while, who haven't stagnated and still try new things, who have come to realize that there is a balance to be struck between practicality and purity, and have also come to realize that if you can't read the code six months later it almost might as well not exist. And some other things like that. \r\n\r\nMany decisions embedded in Python only make sense in that context. I don't want to get too far into flamewar territory, but one thing I've seen several times and I suspect even Ruby partisans can't really deny: Many times I've seen something that can be done in Python, and it's concise, but you know Python isn't the _most_ concise. And along comes a Ruby-er with a solution that may cut out a line or two, mostly cuts out a lot of characters, and has a block or two in it instead of a full function definition. But all in all, the same basic number of concepts and almost identical token counts. And the Ruby-er is surprised that all the Python people (if I may exaggerate a bit) don't drop everything and switch to the light of Ruby.\r\n\r\nAnd the reason is, that many of us have learned/think that being the absolute shortest implementation possible isn't the most important thing. Cut some _concepts_ out of the code, you'll impress me. Respell the same solution with a whole lot of symbols that mean something in Markdown so I can't post the list, and it's not such a gain.\r\n\r\nThat's one example of the cultural differences between languages. Another is the difference between Python and Ruby in the feeling about modifying built-in methods (I forget what word Ruby uses for this). Both languages can do it; the difference is purely cultural.\r\n\r\n I don't really mean to claim that there is an absolute better or worse (though I clearly have my preference and I won't deny that colors my description), but merely that there are such differences and they matter. \r\n\r\nAnd of all the language cultures out there, Python is where I fit. I can't commit wholeheartedly to it because I firmly believe better things will come along. (I'm keeping a close eye on how the functional languages manage to live in a multi-core world, as I think that's an opening for one of the biggest language upsets in decades, for instance.) But right now, that's where _I_ fit.\r\n\r\nYour milage _will_ vary.\r\n\r\n(BTW, I consider this a _very_ useful way to evaluate languages, too. The culture says a lot, even if I can't encode the mapping into English.)","stickied":false,"link_id":"t3_vzw8","subreddit_id":"t5_2fwo","timestamp_epoch":1566236778,"message_id":"50575-6b092d4f-064c-4994-a206-e2f647ae649c-1566236778"}