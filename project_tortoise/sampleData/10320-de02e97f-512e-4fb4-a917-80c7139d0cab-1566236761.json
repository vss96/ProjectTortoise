{"retrieved_on":1473807851,"distinguished":null,"gilded":0,"id":"ctrro","parent_id":"t1_ctqd3","edited":false,"author":"evgen","author_flair_text":null,"created_utc":1165365780,"author_flair_css_class":null,"score":1,"ups":1,"subreddit":"programming","stickied":false,"link_id":"t3_tksn","subreddit_id":"t5_2fwo","body":"&gt; Can you debug programs in the Python language using \r\n&gt; the system debugger? \r\n\r\nIf you are exceptionally gifted and know your system very well then there is no reason why you can't, but why would you want to?  There are already a variety of python debugging tools available that have access to python data structures that are opaque to the system debugger.\r\n\r\n&gt; Why does Python have the Global Interpreter Lock? \r\n\r\nBecause thread sync is hard and anyone who claims otherwise is deluded.  The GIL punts the problem and this works for 99.9% of the Python use cases.  For this particular situation it is better to have no solution than a half-assed solution that introduces potential problems that are a nightmare to debug.\r\n\r\n&gt; Why is it taking so long for the language to be \r\n&gt; routinely compiled to native machine code?\r\n\r\nBecause it is not really that important.  For windows &amp; os x I can package up bytecode and interpreter/libs into a single executable that gives me the desired outcome when most people ask for \"compiled python\" and if the compilation is for performance reasons I can use tools like psycho and pyrex to micro-optimize the performance-dependant bits of the code or to link to foreign libraries.\r\n\r\n","controversiality":0,"timestamp_epoch":1566236761,"message_id":"10320-de02e97f-512e-4fb4-a917-80c7139d0cab-1566236761"}