{"gilded":0,"distinguished":null,"retrieved_on":1473807708,"author_flair_text":null,"author":"[deleted]","id":"ctk3c","parent_id":"t1_ctji6","edited":false,"subreddit":"programming","score":1,"ups":1,"author_flair_css_class":null,"created_utc":1165244290,"controversiality":0,"body":"Like pjdleport said, just do type inference after macro expansion.  The real place where static typing hurts macros is in the fact that code can't be represented simply by \"lists\" anymore, but would have to be represented by an actual datatype, something like the following:\r\n\r\n    datatype code = Int of int\r\n                  | String of string\r\n                  | Word of word\r\n                  | Symbol of string (* Words like \"struct\", \"fun\", etc. *)\r\n                  | List of code list;\r\n\r\nAnd manipulating that structure would be much more painful (though probably more likely to be correct) than the heterogeneous lists that normal Lisp macros manipulate.","subreddit_id":"t5_2fwo","link_id":"t3_tif6","stickied":false,"timestamp_epoch":1566236760,"message_id":"6624-c4013beb-fb8a-4398-9e67-b3cdf4bd55bd-1566236760"}