{"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_u719","controversiality":0,"body":"Interesting, and explains why this pathological case would come up in a compiler textbook.  (Actually, IIRC there are some optimizations that are not possible with unrestricted gotos, because several theorems about dominators do not hold with these sorts of flow graphs.)\r\n\r\nIt's also interesting because the only way to compile these structures is to wrap them in an interpreter.  Similar issues came up with FEXPRs vs. NLAMBDAs vs. macros - FEXPRs were abandoned because they effectively prohibited compilation.  Now they've been revived in Ruby's blocks &amp; dynamic methods, and Haskell's lazy evaluation.  Come to think of it, I wonder if Haskell compilers are really *compilers*, because the compiled program is effectively interpreted code that contains instructions for interpreting itself.","score":2,"ups":2,"created_utc":1165984281,"author_flair_css_class":null,"subreddit":"programming","edited":false,"id":"cunw9","parent_id":"t1_cunj9","author_flair_text":null,"author":"nostrademons","distinguished":null,"retrieved_on":1473808453,"gilded":0,"timestamp_epoch":1566236767,"message_id":"26379-735dcd23-0c8b-4b78-b715-d56ad7de86fb-1566236767"}