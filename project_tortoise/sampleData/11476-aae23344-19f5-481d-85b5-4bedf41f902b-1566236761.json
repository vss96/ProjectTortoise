{"id":"ctu79","edited":false,"parent_id":"t1_ctt79","author_flair_text":null,"author":"[deleted]","distinguished":null,"retrieved_on":1473807896,"gilded":0,"subreddit_id":"t5_2fwo","link_id":"t3_tsel","stickied":false,"body":"&gt; An SQL manager, which Rails apps assume you already have separately, but which Django assumes it should be for you. Framework bloat, by any other name, is a feature. Negative.\r\n\r\nNo, the admin interface is not part of the framework. It is just an app built with and bundled with the framework that you can chose to use or chose not to use. And it is definitely not just an SQL manager.\r\n\r\n&gt; Generic views and feeds, which in Rails are called \"scaffolds\" (which you can just use the controller portion of if you want). Neutral.\r\n\r\nGeneric views are really nothing like scaffolds. They are a ton more flexible and powerful. With Rails I never bothered using scaffolds. With Django I try to use generic views whenever possible.\r\n\r\nIt is difficult to accurately compare the two frameworks unless you've used both of them. Otherwise you don't know the true possibilities and limitations of each.\r\n\r\n","controversiality":1,"score":2,"ups":2,"author_flair_css_class":null,"created_utc":1165416743,"subreddit":"programming","timestamp_epoch":1566236761,"message_id":"11476-aae23344-19f5-481d-85b5-4bedf41f902b-1566236761"}