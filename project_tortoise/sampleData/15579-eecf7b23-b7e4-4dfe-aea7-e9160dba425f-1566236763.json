{"subreddit":"programming","score":6,"ups":6,"created_utc":1165564773,"author_flair_css_class":null,"body":"No, Stackless is not comparable to Erlang. Erlang does pretty much everything related to concurrency better. You could build an Mnesia in Stackless, though you'd lose some of the soft real-time and safety properties.\r\n\r\nEven if Stackless had the language features that Erlang does like scheduling and safety, it still wouldn't have the libraries you need to do what Erlang does with supervision trees and the rest of OTP. Code reloading in Stackless can't work smoothly since it's not functional like Erlang is. Stackless doesn't have any way to send messages to different nodes nor does it take advantage of SMP, it doesn't have a networking stack based on epoll/kqueue/etc.\r\n\r\nI'd recommend at least learning Erlang before you start building a large app with Stackless. You'll probably end up just sticking with Erlang for concurrent apps, like I did.","controversiality":0,"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_u2ng","gilded":0,"distinguished":null,"retrieved_on":1473808063,"author_flair_text":null,"author":"etrepum","edited":false,"id":"cu35y","parent_id":"t1_cu2ny","timestamp_epoch":1566236763,"message_id":"15579-eecf7b23-b7e4-4dfe-aea7-e9160dba425f-1566236763"}