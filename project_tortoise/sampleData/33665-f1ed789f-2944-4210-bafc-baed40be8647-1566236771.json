{"author":"cgibbard","author_flair_text":null,"edited":false,"id":"cv3jm","parent_id":"t1_cv2gw","gilded":0,"retrieved_on":1473808747,"distinguished":null,"controversiality":0,"body":"While the correspondence between Haskell's execution model and the average target machine's is a little more distant than C's, it's really not all that hard to grasp how it might be implemented mechanically.\r\n\r\nHaskell is defined so as to have non-strict semantics, and while there are many ways to implement that, by far the most popular is called lazy evaluation.\r\n\r\nBasically, lazy evaluation proceeds by reducing things outermost first -- that is, the function definition is expanded before anything is done with the parameters. In addition to this, in order to prevent duplication of work, the work done in evaluating a parameter to a function is shared between all the occurrences of it in the function body. That's basically all there is to it.\r\n\r\nOne easy way to implement the sharing part of things is to implement values as boxes with a pointer to either code for computing the value, or the value itself, together with a boolean flag which tells you which one of these you have. When a value is needed the first time, the code is run, and the pointer updated to point at the result, and the flag along with it so that any future demand for the value won't result in running the code again.\r\n\r\nNow, the [Spineless Tagless G-machine (STG)](http://citeseer.ist.psu.edu/peytonjones92implementing.html), which is an abstract machine model used in Haskell compilers like GHC, uses a clever method to eliminate the use of the flag, instead always using a code pointer, so that it can avoid the extra tests involved in the tagged methods.\r\n\r\nBut when you get right down to it, an execution model for Haskell is really not so hard to understand. Quite a bit of work has been done to ensure that it is easy to implement on stock hardware, and the paper linked to above gives a rather nice overview of it. (Or at least, what had been done up to 1992.)","link_id":"t3_uzuc","stickied":false,"subreddit_id":"t5_2fwo","subreddit":"programming","author_flair_css_class":null,"created_utc":1166350586,"ups":5,"score":5,"timestamp_epoch":1566236771,"message_id":"33665-f1ed789f-2944-4210-bafc-baed40be8647-1566236771"}