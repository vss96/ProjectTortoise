{"author_flair_text":null,"author":"notfancy","edited":false,"id":"cw3ql","parent_id":"t1_cvywn","gilded":0,"retrieved_on":1473809438,"distinguished":null,"body":"Your OCaml isn't very canonical. I'd use a closure:\r\n\r\n    let set, deposit, widthraw, check =\r\n       let balance = ref 0 in\r\n       (fun n -&gt; balance := n),\r\n       (fun n -&gt; balance := !balance + n),\r\n       (fun n -&gt; balance := !balance - n),\r\n       (fun () -&gt; !balance)\r\n\r\nOf course, you *can* use modules:\r\n\r\n    module BankAccount : sig\r\n      val set : int -&gt; unit\r\n      val deposit : int -&gt; unit\r\n      val withdraw : int -&gt; unit\r\n      val check : unit -&gt; int\r\n    end = struct\r\n      let balance = ref 0\r\n      let set n = balance := n\r\n      let deposit n = balance := !balance + n\r\n      let withdraw n = balance := !balance - n\r\n      let check () = !balance\r\n    end\r\n\r\nFor added fun, use objects:\r\n\r\n    class account = let balance = ref 0 in object\r\n      method set n = balance := n\r\n      method deposit n = balance := !balance + n\r\n      method withdraw n = balance := !balance - n\r\n      method check = !balance\r\n    end\r\n    (* ... *)\r\n    # let x = new account ;;\r\n    val x : account = &lt;obj&gt;\r\n    # x#set 100 ;;\r\n    - : unit = ()\r\n    # x#deposit 20 ;;\r\n    - : unit = ()\r\n    # x#check ;;\r\n    - : int = 120\r\n    # let y = new account ;;\r\n    val y : account = &lt;obj&gt;\r\n    # y#set 50 ;;\r\n    - : unit = ()\r\n    # x#check ;;\r\n    - : int = 50\r\n\r\nIf you *don't* want to be able to create more than one account, you can write:\r\n\r\n    let account = let balance = ref 0 in object\r\n      method set n = balance := n\r\n      method deposit n = balance := !balance + n\r\n      method withdraw n = balance := !balance - n\r\n      method check = !balance\r\n    end\r\n\r\nSo there.","controversiality":0,"link_id":"t3_vywm","stickied":false,"subreddit_id":"t5_2fwo","subreddit":"programming","author_flair_css_class":null,"created_utc":1167180264,"ups":2,"score":2,"timestamp_epoch":1566236778,"message_id":"52025-45e09896-ff6c-43ed-8526-27d859598e2d-1566236778"}