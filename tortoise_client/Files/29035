{"retrieved_on":1473808658,"distinguished":null,"gilded":0,"parent_id":"t1_cuw10","edited":false,"id":"cuyvh","author_flair_text":null,"author":"carpeliam","created_utc":1166220696,"author_flair_css_class":null,"ups":2,"score":2,"subreddit":"programming","stickied":false,"link_id":"t3_uuzg","subreddit_id":"t5_2fwo","body":"first let me say yeowtch at -10 for my commment, that's impressive. i didn't think that yearning for the ruby of the future would garner such scorn. I mean, I like Java- right now, I'm playing with the Eclipse framework, which is a lot of fun to build on top of. It's the closest I feel to playing, outside of playing in Ruby.\r\n\r\nJRuby's nice, and with Java 6 adding [extra support for scripting](https://scripting.dev.java.net/), i'm wondering if it'll be more acceptable to use hybrid languages like jruby, jython, etc. but i'm really just talking about improvements to the language itself. I don't want to have to write Java for everything that isn't implemented in Ruby yet. Take threading for example.\r\n\r\nI love the syntax of ruby, which I feel is the closest I've ever been to coding in English. But ruby hasn't even hit 2.0 yet, and naturally there will be improvements along the way.\r\n\r\nRuby will most likely never have the performance of Java or C/C++. But I'm sure people remember how slow Java was in its first version; a lot of people at the time didn't think that Java could ever be as fast as C++. I'm not talking about performance like Java, I'm just hoping for a language that can deal well with concurrency, as a start. Performance increases will come.","controversiality":0,"timestamp_epoch":1566236770,"message_id":"31526-e36025c6-aec9-4cd1-9a4f-ead90e64c0d5-1566236770"}