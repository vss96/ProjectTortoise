{"retrieved_on":1473808095,"distinguished":null,"gilded":0,"id":"cu4yr","parent_id":"t1_cu4e1","edited":false,"author":"nostrademons","author_flair_text":null,"created_utc":1165597874,"author_flair_css_class":null,"score":4,"ups":4,"subreddit":"programming","stickied":false,"link_id":"t3_u3fx","subreddit_id":"t5_2fwo","body":"You shouldn't need a memset for the copying case:\r\n\r\n    char * StrReverse ( char * s ) \r\n    {\r\n        int i, n;\r\n        char *c, *new, *end;\r\n\r\n        n = strlen(s);\r\n        c = new = malloc(n + 1);\r\n        end = s + n - 1;\r\n        while(end &gt;= s) {\r\n           *(c++) = *(end--);\r\n        }\r\n        *c = '\\0';\r\n        return new;\r\n    }\r\n\r\nEvery element of c is set in the loop, and then the null terminator is manually set afterwards (at c[n], since i == n at that point).  The memset is redundant.\r\n\r\n(Edited to change arrays back to pointer arithmetic.  It's arguably faster, and I have doubts whether the array version will compile (I'm doing this from memory)).","controversiality":0,"timestamp_epoch":1566236763,"message_id":"16366-030b94af-401d-4e60-b7d0-ac0eba039460-1566236763"}