{"edited":false,"id":"cv02h","parent_id":"t1_cuzlj","author_flair_text":null,"author":"jerf","retrieved_on":1473808681,"distinguished":null,"gilded":0,"stickied":false,"link_id":"t3_uz8g","subreddit_id":"t5_2fwo","body":"In that link, Schneier probably phrases it in terms of looking for English text to keep it concrete enough for a wider audience to follow.\r\n\r\nIn math terms, you could probably read \"looking for English text\" as \"looking for a text with lower-than-random entropy\", and be on track; that's what he's getting at in the last three paragraphs.\r\n\r\nThat is to say, there is a relatively simple measure that can tell you that you have \"something\" in the average case. You can then move on to identifying that \"something\". Even compressed text will probably look mostly-regular in the first few bytes which will likely contain header information in real-world formats, not compressed data (which is still not quite random in nature, either).\r\n\r\n(Yes, if you knew somebody was going to do that you could try to armor your plaintext with high-entropy garbage at the front. This could be defeated by decrypting more of your message before giving up, at an obvious computational cost. As usual, it's an arms race when it comes to real application.)\r\n\r\nThat's your first question.\r\n\r\nYour second question is outside of the realm of conventional cryptography, because you have postulated a second communication channel between Alice and Bob that you can't tap or haven't tapped. This is the channel they used to communicate to each other the requirements for post-processing the encrypted messages. To the extent that renders the resulting plaintext unintelligible, you've basically cheated; if it doesn't render the plaintext unintelligible because the data is still essentially there, you've merely accomplished security-by-obscurity.\r\n\r\n(You've \"cheated\" by sending a critical part of the plaintext on this hypothetical perfect information channel. If such a thing exists, why not send the entire message on that channel? Or failing that, use it to generate a one-time pad?)\r\n\r\nAnd encryption + steganography is, well, exactly what it sounds like, two things layered on top of each other. First you have to somehow decrypt the video, then you have to apply steganographic techniques to the video. At first glance I wouldn't say the combination of the two adds much to the math involved.\r\n\r\nThere are a number of objections I could see someone raising, but most of those are practical, not really mathematical. For instance, you might complain about how you believe it's generally impossible to detect steganograhic data, or you might spin a contrived real-world example as to why Alice and Bob don't generate a one-time pad with their perfect communication channel, but that's really independent of the answers I'm giving here. I'm trying to reduce your situation to other, already-existing situations, in the mathematical sense of reducing problems.","controversiality":0,"created_utc":1166248981,"author_flair_css_class":null,"ups":5,"score":5,"subreddit":"programming","timestamp_epoch":1566236770,"message_id":"32090-ec4ca3b1-13a3-48a2-90e2-72afa03e8edf-1566236770"}