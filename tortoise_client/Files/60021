{"subreddit":"programming","score":3,"ups":3,"author_flair_css_class":null,"created_utc":1167118862,"body":"ruby without rails -\r\ncombined a legacy apache/mod\\_perl system with all new code being written in ruby using lighttpd/fastcgi and persistent ruby processes. Its does ecommerce and has been running for over one year and most of the ruby processes have been alive most of that time. If we had had time and $ before release we could/would have replaced all the apache/mod_perl routines with ruby routines. db is mysql 5.0 using sp's for almost everything.\r\nLVS for load balancing and memcached for the few things that require persistence across requests. \r\n\r\nThe nice thing about the new code is that it is unshackled from apache and mod_perl and can run on any lean http server that supports fcgi.\r\n\r\nfcgi - its not just for php anymore  :)\r\nand as we showed with this project, fcgi can do much to stop language tyranny - You can have decent performance with persistent processes in any language (that supports fastcgi) without requiring that _everything_ be written in the same language. In future projects, I'd opt for using more different languages on a case by case basis per function. If I were an apache fan, I'd use multiple mod_*s. fcgi processes can be more flexible since if a certain function needs more resources, it can be moved to machines separate from the web server.\r\n\r\nIs that other cgi method available for anything other than python - scgi (I think, not sure) ?\r\n\r\nedit: escape the \\_ so it doesn't create italics...","controversiality":0,"subreddit_id":"t5_2fwo","link_id":"t3_w0ju","stickied":false,"gilded":0,"distinguished":null,"retrieved_on":1473809395,"author":"redditacct","author_flair_text":null,"edited":false,"parent_id":"t3_w0ju","id":"cw1ge","timestamp_epoch":1566236778,"message_id":"50846-572bc012-7d90-4bb8-b8b1-7c978e3226c4-1566236778"}