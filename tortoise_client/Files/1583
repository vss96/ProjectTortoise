{"author":"kawa","author_flair_text":null,"parent_id":"t1_cubki","edited":false,"id":"cubva","gilded":0,"distinguished":null,"retrieved_on":1473808226,"controversiality":0,"body":"Thats wrong. People want features. The more the better. What they don't want are the disadvantages. In some cases it's an appreciation of values, for example with cell phones: Longer stand-by time, brighter display etc - but also as small as possible with no room for a big battery. So in fact the producer always has to balance it.\r\n\r\nSame for software: More features? Of course! But also simple use and soft learning curve. With software this is even possible to a certain degree because there are no physical constraints like in cell-phones. \r\n\r\nGood structured menus can make it possible to have lots of features which aren't standing in your way if you simply want to do a phone call. But not every cellphone maker seems to be able to do this. *That* is the problem, not feature bloat. \r\n\r\nFeature bloat don't even exists - but there are lots of bad GUIs.\r\n","subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_ualu","subreddit":"programming","score":9,"ups":9,"created_utc":1165763095,"author_flair_css_class":null,"timestamp_epoch":1566236765,"message_id":"20179-c20c496e-43d9-40f3-b25e-7131abeb0fa9-1566236765"}