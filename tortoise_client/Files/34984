{"author_flair_text":null,"author":"evgen","id":"cvnhu","parent_id":"t1_cvn8t","edited":false,"gilded":0,"distinguished":null,"retrieved_on":1473809130,"controversiality":0,"body":"The funky super() syntax is to get problems when dealing with multiple inheritance.  MI was not something that Python dealt with very well (nor do most other OO languages) and with the method-resolution order rules and the wierd super() syntax it is much easier to deal with the problems that can result from this issue.  The canonical example is having classes B and C which are subclasses of A and class D which lists both B and C as superclasses: who gets the call for an inherited do_something()?","subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_vlxo","subreddit":"programming","score":2,"ups":2,"created_utc":1166723291,"author_flair_css_class":null,"timestamp_epoch":1566236774,"message_id":"43671-d76c7982-c425-45be-9e77-4dba53c3bb2d-1566236774"}