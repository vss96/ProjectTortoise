{"parent_id":"t1_cvuit","id":"cvven","edited":false,"author":"jerf","author_flair_text":null,"distinguished":null,"retrieved_on":1473809280,"gilded":0,"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_vr55","controversiality":0,"body":"What I _know_ is a type error is sending a message to an object that doesn't support it (in Smalltalk terms, translated as appropriate to the language I'm working in). That doesn't happen very often for me.\r\n\r\nWhat really tends to get me are the cases where the code doesn't do what I think it should do. The code always turns out to be right. I suppose some of the more radical type systems could protect me from some of those, but can they detect at compile time that a list of something I retrieved from the database that I thought was guaranteed to have at least one entry turned out not to? That was my most time consuming bug this last week. (Fortunately it was in my test cases, not a production system.)","score":1,"ups":1,"created_utc":1166908729,"author_flair_css_class":null,"subreddit":"programming","timestamp_epoch":1566236775,"message_id":"47756-d1788670-b91f-4f2d-9806-a827f2636fd9-1566236775"}