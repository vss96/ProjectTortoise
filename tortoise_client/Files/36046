{"author_flair_text":null,"author":"joesb","edited":false,"parent_id":"t1_cuuqa","id":"cuux6","gilded":0,"distinguished":null,"retrieved_on":1473808584,"body":"&gt; * Are too academic, sit in meetings too long, and don't get any work done.\r\n\r\n\r\nTalking about Lisp, or Haskell? More work is done with java than those language that produce academic paper.\r\n\r\n\r\n&gt; * Have no problem deprecating a method with careless disregard for code that's older than 6 months. \r\n\r\n\r\nTalking about Ruby/Python library? Any open source library that is in developing state has their API change easily, faster than 6 months probably. Java has many deprecation in the standard library but at least they keep that as a warning for a very long time before they actually remove it.  The opposite is that java developer complains that the methods is kept deprecated for too long without being actually removed. And when new Java SDK is released, for example Java 1.5, they still backport bug fix and and release Java 1.4 update for a while. Does Rails back port all bug fix from Rails 1.1 to Rails 1.0?\r\n\r\n\r\nBeside what's already in Common Lips ANSI standard to ISO C++/STL, what developing open source library doesn't change easily?\r\n\r\n\r\n&gt; A programming team may take 6 months to build something, but then it only lasts 2 months before they have to rewrite chunks of it because some dorkwad server room admin upgraded the Java.\r\n\r\n\r\nSo PHP can be upgraded from PHP4 to PHP5 and your code always keep running? All code runs equally well on Ruby 1.8.0, 1.8.2 and 1.8.3? Does socket/threading/weak-reference API in SBCL lisp never change?\r\n\r\n\r\n&gt; * Love your compiler too much, slowing down the pace of development. And don't you all just love how the compiler command line requires things specified a certain way with the right folder paths or the thing won't run.\r\n\r\n\r\nCompare to GCC options, Java compiler is a lot easier.\r\n\r\n\r\n&gt; * Love to rename software design strategies with stupid new names. This year it's agile, what next -- fragile?\r\n\r\n\r\nIsn't the inventor of XP actually more of a Smalltalk developer?","controversiality":0,"subreddit_id":"t5_2fwo","link_id":"t3_utqb","stickied":false,"subreddit":"programming","score":9,"ups":9,"author_flair_css_class":null,"created_utc":1166156248,"timestamp_epoch":1566236769,"message_id":"29736-447030e6-a209-4d8e-91f0-37acae6c9e5d-1566236769"}