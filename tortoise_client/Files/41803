{"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_t7v9","body":"Given what I have been taught and the different papers I've read, and please take this with a grain of salt, I was always under the impression that concept of type is related to the physical representation of a value domain.  This physical representation on modern architectures is usually manifested in groupings of bits (or usually octets).  It's the formal, semantic definition of bit patterns (or groupings of bit patterns) that defines a particular type.  Signed vs. unsigned, mantissa and exponent, and character codings are formalized, and even standardized, definitions of types.\r\n\r\nGiven this, it is type conversions (promotion, coercion, etc.) that is taken into account when labeling a language as \"strongly\" or \"weakly\" typed (which is a far different area than \"dynamically\" and \"statically\" typed).\r\n\r\nConsider:\r\n\r\n    int main() {\r\n      int a = -9999;\r\n      int b;\r\n      unsigned char c;\r\n\r\n      c = a;\r\n      b = c;\r\n\r\n      printf(\"Answer == %d\\n\", b);\r\n      return 0;\r\n    }\r\n\r\nYou can compile that program with `-Wall -Werror` and `gcc` will not make a peep.  That makes C \"weakly\" typed.\r\n\r\nIn other words, C will let you move bit patterns (values) around between different domains (types) without a layer of semantic checks or formalized conversion layer.\r\n\r\nCompare with OCaml:\r\n\r\n    let a = -9999;;\r\n    let c = ref 'a';;\r\n    c := a;;\r\n\r\nIf you try a normal `ocamlc` you'll get \"This expression has type **int** but is here used with type **char**\".  This behavior makes OCaml \"strongly\" typed.  OCaml forces you to go through a formalized conversion layer, `char_of_int`, which validates the input data before letting you move a bit pattern around.  The types constraints are enforced to ensure a level of program correctness so that you don't get core dumps  (like dereferencing a file descriptor as type `FILE*`).\r\n\r\nStrong typing enforces checks during conversions between type domains to ensure that the value will make sense in the new domain.","controversiality":0,"ups":2,"score":2,"created_utc":1165014230,"author_flair_css_class":null,"subreddit":"programming","id":"ctail","parent_id":"t3_t7v9","edited":false,"author":"wreel","author_flair_text":null,"distinguished":null,"retrieved_on":1473807527,"gilded":0,"timestamp_epoch":1566236758,"message_id":"2377-96455686-569a-4199-b3cb-125c6b269573-1566236758"}