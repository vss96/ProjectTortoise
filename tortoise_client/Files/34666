{"gilded":0,"retrieved_on":1473808847,"distinguished":null,"author":"cgibbard","author_flair_text":null,"edited":false,"id":"cv8tz","parent_id":"t1_cv6pa","subreddit":"programming","author_flair_css_class":null,"created_utc":1166465432,"score":1,"ups":1,"body":"As for refactoring, well, it depends on what you really mean. GHC has a [RULES pragma](http://www.haskell.org/ghc/docs/latest/html/users_guide/rewrite-rules.html), which allows one to specify compile-time rewrite rules for optimisation. These have been used by libraries like [Data.ByteString](http://www.cse.unsw.edu.au/~dons/fps.html) (now included with GHC) for automatically rewriting high-level code into a more efficient form. The effect is that you can write simple programs which handily beat naively-written C code. (up until the C code starts using block-I/O)\r\n\r\nSo at least in the optimisation sense, we do have some sort of refactoring as a sort of language feature. (It would be nice if the specification of RULES was made something a bit more standard though.)\r\n","controversiality":0,"link_id":"t3_uuzg","stickied":false,"subreddit_id":"t5_2fwo","timestamp_epoch":1566236772,"message_id":"36312-a2ae6327-9d41-4a49-a9bc-251504c24fd9-1566236772"}