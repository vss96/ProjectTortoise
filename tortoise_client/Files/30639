{"controversiality":0,"body":"I don't think the author properly addresses the main criticisms of the original article (which claims that functional languages represent an order of magnitude improvement in productivity over imperative languages), namely, that the study was poorly administered, poorly measured, only dealt with a mini-toy problem, and never even ran the results.\r\n\r\nI will agree that functional programming languages *can* give big boosts in productivity and that shorter programs (that accomplish the same thing as long ones) are generally better, but the study is just too deeply flawed to have much, if any, value as a data point.\r\n\r\nFor certain small tasks, any of the scripting languages give boosts similar to functional languages. Scaling *may* be a serious problem for them. Libraries and frameworks are important, and while linked to languages, they are not the same. In programming practice, sadly, the boring details of things like input and output take up much more space than the core algorithms (the interesting bits), and my impression is most functional languages are strong on core algorithms, but weak on the 'window-dressing'.\r\n\r\nIn summary, I'm (somewhat) pro-functional programming; I just thought the study was awful, and the article weak.\r\n\r\nA discussion based on the result of the Programming Contest would probably be much more interesting.","subreddit_id":"t5_2fwo","link_id":"t3_ujjm","stickied":false,"subreddit":"programming","score":12,"ups":12,"author_flair_css_class":null,"created_utc":1165919521,"author_flair_text":null,"author":"jbstjohn","edited":false,"parent_id":"t3_ujjm","id":"cujus","gilded":0,"distinguished":null,"retrieved_on":1473808379,"timestamp_epoch":1566236767,"message_id":"24483-3ff2e22c-5036-4930-a01b-16773ed7f91f-1566236767"}