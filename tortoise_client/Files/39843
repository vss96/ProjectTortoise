{"subreddit":"programming","created_utc":1165078282,"author_flair_css_class":null,"score":-1,"ups":-1,"controversiality":0,"body":"F#?  Have there been any releases yet?  I just heard about it for the first time the other day.\r\n\r\nPython has a huge standard library and bindings to a large number of other libraries.  There are numerous options for web development, plus you can do OpenGL and SDL, scientific plots and computing, text processing (generally with less pain than other languages); here is a brief tour of the standard library:\r\n\r\nhttp://docs.python.org/tut/node12.html\r\n\r\nMuch of Python's usefulness comes not because of the superiority of the language, but because for a large number of utility tasks, there is already a module that handles it (e.g. CSV reading/writing).  Implementation bugs are few and far between; contrast to e.g. GHC (Haskell) which has been known for a large number of runtime issues.\r\n\r\nIf you want to serialize an object, compare this to the effort it takes in Java (woops, forgot to mark one sub-member of a sub-member as implements Serializable and the whole things doesn't work):\r\n\r\n    picklestring = cPickle.dumps(object) \r\n    object = cPickle.loads(picklestring)\r\n\r\n\r\nPython is a bit like a better Perl in that it's a very useful duct tape language but it's easier to read; also its object orientation is far clearer, rather than stapled on like in Perl or PHP.  (Although not as completely OO as Ruby.)  It also has a just-in-time compiler (Psyco) and numerous options for C interface (Swig, Boost, Pyrex, etc.; it's not even hard doing it by hand).\r\n\r\nOn the other hand, its speed -- while superior to Ruby -- is far below that of OCaml: \r\nhttp://shootout.alioth.debian.org/gp4/benchmark.php?test=all&amp;lang=all\r\n\r\nIts OO implementation on the surface looks fairly close to C++ which means it's usually more straightforward to convert your classes from C++ to Python or vice-versa than with other scripting languages.\r\n\r\nSince it plays well with C, it should play well with other languages that do too; so you could write a simple framework in Python to take advantage of its libraries and then do your heavy lifting in OCaml (or Lisp).  Haskell has a set of bindings to Python now (MissingPy).\r\n\r\n","stickied":false,"link_id":"t3_t1qf","subreddit_id":"t5_2fwo","gilded":0,"retrieved_on":1473807566,"distinguished":null,"author":"lemmikins","author_flair_text":null,"id":"ctcp7","parent_id":"t1_ctb9x","edited":false,"timestamp_epoch":1566236759,"message_id":"3363-6ede10f5-ae2b-4e3d-b000-bd65fb839de8-1566236759"}