{"id":"cuw9w","edited":false,"parent_id":"t1_cuufm","author_flair_text":null,"author":"nostrademons","retrieved_on":1473808609,"distinguished":null,"gilded":0,"link_id":"t3_utqb","stickied":false,"subreddit_id":"t5_2fwo","body":"I think the Haskellers kinda took over from the Lispers here.  Paul Graham's [to blame](http://www.paulgraham.com/avg.html) for that too:\r\n\r\n&gt; As long as our hypothetical Blub programmer is looking down the power continuum, he knows he's looking down. Languages less powerful than Blub are obviously less powerful, because they're missing some feature he's used to. But when our hypothetical Blub programmer looks in the other direction, up the power continuum, he doesn't realize he's looking up. What he sees are merely weird languages. He probably considers them about equivalent in power to Blub, but with all this other hairy stuff thrown in as well. Blub is good enough for him, because he thinks in Blub.\r\n\r\nMost Haskellers can tell you exactly why you would or wouldn't want to use Haskell over Lisp.  They can go into detail about what you can do in Haskell that you can't in Lisp, what you can do in Lisp that you can't in Haskell, and what features are common to both languages under differing names.  Ask about Haskell in comp.lang.lisp, however, and you'll get \"Haskell?  Isn't that some weird academic language?  I never learned it.  It's not like you could ever get a job programming Haskell.\"\r\n\r\nErgo, Haskell is further up the Blub continuum than Lisp.\r\n\r\nIf I'm going to buy the existence of a Blub continuum, I might as well go all the way to the top.  So I learned Lisp and then went on to learn Ocaml, Erlang, and Haskell.  Now working on Epigram, which may be even beyond Haskell.","controversiality":0,"author_flair_css_class":null,"created_utc":1166188450,"score":16,"ups":16,"subreddit":"programming","timestamp_epoch":1566236769,"message_id":"30285-dc32d7fc-f44c-47bb-8231-836c064062d7-1566236769"}