{"gilded":0,"distinguished":null,"retrieved_on":1473807666,"author_flair_text":null,"author":"anonymous-coward","id":"cthvm","edited":false,"parent_id":"t1_cth9z","subreddit":"programming","score":11,"ups":11,"author_flair_css_class":null,"created_utc":1165193808,"controversiality":0,"body":"* *successor to CMUCL* - this is good because CMUCL was the only high performance free Lisp compiler. But CMUCL was not easily portable and had ugly bootstrapping issues: you needed an old CMUCL to build new CMUCL, and the resulting new CMUCL was a function of the old compiler. SBCL builds cleanly, starting with any old Lisp, and ending with a clean build of SBCL.\r\n\r\n* *number crunching* - harrrumph, either you get this or you don't. You use a computer to compute stuff, usually involving numbers. SBCL provides a free high level environment for doing this quickly.\r\n\r\n* *SMP* - you can run SBCL on several CPUs at once, using locking facilities to avoid trashing memory. Very good for webservers and such. Easy threading in a high level language is *very nice*.\r\n\r\n* *package locking* - lisp has packages to separate the namespaces of functions and variables, and these can/should be locked to prevent you from (say) redefining *sin* and *cos*, unless you want to.","subreddit_id":"t5_2fwo","link_id":"t3_tgiu","stickied":false,"timestamp_epoch":1566236759,"message_id":"5675-b713f139-8552-42e0-9bb8-818c06b379f5-1566236759"}