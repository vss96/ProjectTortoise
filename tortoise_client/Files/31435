{"gilded":0,"retrieved_on":1473808090,"distinguished":null,"author":"jseigh","author_flair_text":null,"id":"cu4o1","parent_id":"t3_u3fx","edited":false,"subreddit":"programming","author_flair_css_class":null,"created_utc":1165594197,"score":8,"ups":8,"body":"I used to ask really simple programming problems while interviewing entry level candidates.  One, I wasn't interested in showing off by asking an impossibly obscure technical question that only I knew the answer to.  Secondly, the candidates are somewhat disoriented by the interview process, it doesn't take much to totally confuse them, and I'm more interested in their thinking process which is easier to follow in a simple situation.\r\n\r\nOn the other side of the table, I've found in areas where you are more of an expert than the interviewer, that the problem can be much more complex than the interviewer realizes.  You can easily end up describing a solution different than the one they envisioned.  It can be a perfectly valid solution but it's the wrong solution as far as they're concerned.","controversiality":0,"link_id":"t3_u3fx","stickied":false,"subreddit_id":"t5_2fwo","timestamp_epoch":1566236763,"message_id":"16210-194a2083-32c2-4cac-b1df-f4f567be3631-1566236763"}