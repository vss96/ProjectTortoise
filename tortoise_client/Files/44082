{"subreddit":"programming","score":2,"ups":2,"created_utc":1166314670,"author_flair_css_class":null,"body":"The point of adding the extra line was so you could attach a variable to the expression.  That makes the intent clear.  As for the extra-logic: again, I've said that I prefer the ternary operator because it draws your attention to the operands rather than the keywords.  There's a matter of preference in here - I grew up hating the ternary operator because the books I'd learned to program from all said it was unreadable and bad style.  Then I started using it, saw that it made code much more concise and not much less readable once you got used to it, and figured there are damn few decent language features and we ought to use all of them.  The ones that are appropriate, at least. ;-)\r\n\r\n&gt; static int max(int x, int y, int z);\r\n\r\nThen you have to define max(w, x, y, z), max(t, w, x, y, z), and so on.\r\n\r\nI suppose that if you really want to be fully general, you'd use:\r\n\r\n    public static ≺T extends Comparable≺T&gt;&gt; T max(T.. args) {\r\n        T max = args[0];\r\n        for(int i = 1; i ≺ args.length; ++i) {\r\n           max = args[i].compareTo(max) &gt; 0 ? args[i] : max;\r\n        }\r\n        return max;\r\n    }\r\n\r\nThat's fully generic, ordinary ints will autobox to their Integer equivalents (which are Comparable), it works on any number of arguments, and you can pass it any Comparable object.  But damn - why bother, if you just want to compare 3 elements?  And besides, you'll take a significant efficiency hit, so you may not be able to use this in performance-critical code anyways.","controversiality":0,"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_uzuc","gilded":0,"distinguished":null,"retrieved_on":1473808725,"author_flair_text":null,"author":"nostrademons","edited":false,"id":"cv2eh","parent_id":"t1_cv2du","timestamp_epoch":1566236770,"message_id":"33054-b2fbad43-f4a7-44b7-a542-7522ec66ea02-1566236770"}