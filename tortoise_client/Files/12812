{"author_flair_text":null,"author":"cgibbard","edited":false,"parent_id":"t1_cv6et","id":"cv8xq","gilded":0,"distinguished":null,"retrieved_on":1473808848,"body":"If you're processing XML, use a bloody XML library. Anything short of that will result in breakage or lack of maintainability later. (Or posting to thedailywtf.com)\r\n\r\nHere's how I'd write the complete program using HXT, which is a library for XML processing in Haskell.\r\n\r\n    import Text.XML.HXT.Arrow\r\n    main = do\r\n        xs â‰º- runX $ readDocument [(a_validate,v_0)] \"\"\r\n                 &gt;&gt;&gt; multi (isElem &gt;&gt;&gt; hasName \"foo\"\r\n                                   &gt;&gt;&gt; hasAttr \"bar\"\r\n                                   &gt;&gt;&gt; neg (hasAttr \"whoops\"))\r\n                 &gt;&gt;&gt; writeDocumentToString []\r\n        mapM_ print xs\r\n\r\nThis prints the contents of each foo tag which has \"bar\" as an attribute, but not \"whoops\", including cases where one foo tag is nested inside another. To handle that correctly with a regular expression, well, you couldn't do it without invoking awkward-to-use perl extensions which give you support for nonregular languages. In perl6 it might be somewhat prettier with the grammar syntax, but still not terribly maintainable.","controversiality":0,"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_v35v","subreddit":"programming","score":5,"ups":5,"created_utc":1166466805,"author_flair_css_class":null,"timestamp_epoch":1566236772,"message_id":"36358-5923a58f-f57d-4729-b0d6-4d0a01e24d61-1566236772"}