{"body":"It doesn't work smoothly in the majority of cases unless you're using a framework that's very carefully designed to deal with that scenario. Yes, it's possible to do live coding in Stackless. However, it's not a feature of Stackless nor are there readily available frameworks to make it an approachable problem. There are plenty of pitfalls in Python that will haunt you if you try and do code reloading, because so many things are mutable and it's hard to make certain changes to classes because there's not enough indirection to change what something is in memory fundamentally if you need to.\r\n\r\nIn Erlang the entire language is mostly functional which makes it really obvious where the state is and how to upgrade it. Pattern matching makes it even easier in that you can easily write functions that deal with a particular version of a state. More importantly, the whole standard library and OTP style of programming is designed to do live upgrades and downgrades of code to production systems.","controversiality":0,"subreddit_id":"t5_2fwo","link_id":"t3_u2ng","stickied":false,"subreddit":"programming","ups":5,"score":5,"author_flair_css_class":null,"created_utc":1165576184,"author_flair_text":null,"author":"etrepum","id":"cu3ju","edited":false,"parent_id":"t1_cu3hq","gilded":0,"distinguished":null,"retrieved_on":1473808070,"timestamp_epoch":1566236763,"message_id":"15751-5cf2dba1-bff6-40b8-9cf0-d1be203a8aec-1566236763"}