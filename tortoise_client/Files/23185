{"score":15,"ups":15,"created_utc":1166090841,"author_flair_css_class":null,"subreddit":"programming","subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_uqo3","body":"Well said. Haskell example is cleanest because simple problem was selected and it was clean to express in Haskell. But how does html generating code look in Haskell? \r\n\r\nIn lisp it can be like:\r\n\r\n    (defun simple-table-c (count)\r\n      (with-open-file (p \"test.html\"\r\n            :direction :output\r\n            :if-exists :supersede)\r\n    \r\n        (html-stream p \r\n            (:html\r\n              (:head (:title \"Test Table\"))\r\n              (:body \r\n               ((:table border 2)\r\n                (dotimes (i count)\r\n                  (html (:tr (:td (:princ i))\r\n                             (:td (:princ (* i i))))))))))))\r\n\r\n\r\n\r\nOr sql statement? Here is one using Common SQL (common lisp package for handling SQL statements)\r\n\r\n    [select [foo bar] [baz] \r\n        :from '([foo] [quux])\r\n        :where [or [&gt; [baz] 3] \r\n               [like [foo bar] \"SU%\"]]]\r\n\r\nabove examples are actual syntax you use in lisp code.","controversiality":0,"distinguished":null,"retrieved_on":1473808509,"gilded":0,"parent_id":"t1_cuqw5","id":"cuqxz","edited":false,"author":"[deleted]","author_flair_text":null,"timestamp_epoch":1566236768,"message_id":"27738-976865a7-c5e6-4a03-bb86-4b0d6ab023cb-1566236768"}