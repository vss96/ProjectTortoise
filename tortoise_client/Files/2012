{"author":"praetorian42","author_flair_text":null,"edited":false,"id":"cule6","parent_id":"t3_ujbj","gilded":0,"distinguished":null,"retrieved_on":1473808407,"controversiality":0,"body":"The \"Dummy Form Elements\" is really the only valid one.\r\n\r\nHaving written several web bots (not spam bots, but stuff to access info from sites that don't have an API), the rest of these solutions are reasonably trivial to get around.\r\n\r\nThere are libraries out there that are reasonably good (70-100% success rate, depending on the captcha) at cracking captchas.  \r\n\r\nThe photo captchas are susceptible to brute forcing (KittenAuth is 1/9 chance- good enough for me).  \r\n\r\nAnimation captcha wouldn't be terribly hard (I'd use RMagick to grab each individual frame and run it through a standard captcha library)- but I haven't run into one in the wild yet.\r\n\r\nAnd GETting a page's form before submitting it is a standard operation when building a bot.  A large number of sites put in session cookies when you GET a login form, for instance.\r\n\r\nThere are really only two things that can reasonably stop bots: 1) CSS, and 2) Javascript.  Both create minor accessibility problems, but trying to build a javascript-compatible bot is nearly impossible.  What I did one time is have a hidden form field with the MD5 hash of the First Name field as computed once the form was submitted.  It would still take the input if the hash didn't match the value, but would be flagged for fraud purposes afterwards.","subreddit_id":"t5_2fwo","link_id":"t3_ujbj","stickied":false,"subreddit":"programming","ups":5,"score":5,"author_flair_css_class":null,"created_utc":1165944849,"timestamp_epoch":1566236767,"message_id":"25165-798c762a-e80a-4c58-b42d-5a365f3267a8-1566236767"}