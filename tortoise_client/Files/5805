{"link_id":"t3_uqo3","stickied":false,"subreddit_id":"t5_2fwo","body":"This functionality sorta exists in the emacs haskell-mode already, although I think the bundled functionality only works on functions.\r\n\r\nIf you want to use ghci to derive your type and print it out, here's a function you can bind to a key (or call via m-x printtype).  Any elisp gurus out there, please forgive my newbie elisp. \r\n\r\n(defun printtype () (interactive) \r\n\\t(let ((ID (save-excursion\r\n    (buffer-substring-no-properties\r\n     (progn (skip-syntax-backward \"w_\") (point))\r\n     (progn (skip-syntax-forward \"w_\") (point)))))) \r\n\\t\\t(shell-command (concat \"echo \\\":t \" ID \"\\\" | ghci -v0 -cpp -fglasgow-exts -w \" buffer-file-name) )\r\n\\t\\t(beginning-of-line)\r\n\\t\\t(insert-buffer-substring (get-buffer \"*Shell Command Output*\"))\r\n\\t\\t))","controversiality":0,"author_flair_css_class":null,"created_utc":1166162747,"score":2,"ups":2,"subreddit":"programming","edited":false,"id":"cuv8j","parent_id":"t1_curxq","author_flair_text":null,"author":"tl1234562004","retrieved_on":1473808589,"distinguished":null,"gilded":0,"timestamp_epoch":1566236769,"message_id":"29857-16cc2c40-9562-402d-b82a-30fd2841e058-1566236769"}