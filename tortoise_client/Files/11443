{"controversiality":0,"body":"If you think you're going to get any kind of consensus or definitive answer for this question you're off your rocker.\r\n\r\n\"I mean usable in the python \"batteries included\" way. Most FL seem to lack solid libraries, portable and bugfree compilers, and so on. So is functional programing usable for real projects right now, and if so with which language, or is it just a neat idea?\"\r\n\r\nThe answer largely depends on the requirements for your \"real project\".  However, as a general-purpose answer...\r\n\r\nI'd choose F#.  The only thing you won't get (really) is the portable compiler part.  However, it runs on both .NET and mono, you have access to all the .NET libraries - including the HTTP.SYS module (provides an entire HTTP stack) and the .NET runtime has been somewhat battle tested in real world applications.\r\n\r\nIt's also more likely that in the near future, more people will be able to support or maintain an F# application opposed to a Haskell or Erlang project.  Going from Java/C# -&gt; F# is a shift, but not as bad as C#/Java -&gt; Haskell or Erlang.  In the former case, the libraries used are the same.\r\n","stickied":false,"link_id":"t3_u3p2","subreddit_id":"t5_2fwo","subreddit":"programming","created_utc":1165592243,"author_flair_css_class":null,"score":5,"ups":5,"author":"ddwoske","author_flair_text":null,"id":"cu4gf","edited":false,"parent_id":"t3_u3p2","gilded":0,"retrieved_on":1473808087,"distinguished":null,"timestamp_epoch":1566236763,"message_id":"16117-5604adb4-0a51-4789-8638-d4c876c095e6-1566236763"}