{"gilded":0,"retrieved_on":1473808391,"distinguished":null,"author_flair_text":null,"author":"cgibbard","parent_id":"t3_ujjo","edited":false,"id":"cukl3","subreddit":"programming","author_flair_css_class":null,"created_utc":1165934040,"score":5,"ups":5,"body":"I think \"considered harmful\" makes do-notation seem a whole lot worse than perhaps is even being claimed.\r\n\r\nPersonally, I don't mind do-notation, but I do think that it's usually better to explain it after people have the basic idea about how computations are being combined using bind. Otherwise, those people will be in for some big surprises when code starts behaving in non-sequential ways. Even when [I explain the IO monad](http://haskell.org/haskellwiki/Introduction_to_IO) I explain that we're treating computations as values and combining them with various operations before describing how this relates to do-notation.\r\n\r\nIt's very important to make that distinction between action/computation/container and the plain values which are the results of executing or extracting values from those. Sometimes the result will be another computation, but this is somewhat rare in the return/bind worldview. (Of course, it happens all the time with return/fmap/join.)","controversiality":0,"link_id":"t3_ujjo","stickied":false,"subreddit_id":"t5_2fwo","timestamp_epoch":1566236767,"message_id":"24780-0f96c9b4-1570-4d84-bd65-a8e51cfd25e7-1566236767"}