{"subreddit":"programming","author_flair_css_class":null,"created_utc":1166110803,"score":9,"ups":9,"controversiality":0,"body":"&gt;I've made a microbenchmark that measures a method call + instance variable assignment, which comes up a lot in Ruby and Python\r\n\r\nI've never seen anything relatively close to your example in python (except by newly converted java programmers). Why on earth would you use a method to increment a variable? Just increment the variable. Python is designed so the accessors/mutators are implicit. In your example you are essentially calling a method that calls an implicit method that modified the variable.\r\n\r\nEssentially, the class you defined looks like nothing that would ever be considered acceptable code in python. You're even using old-style classes.\r\n\r\nNext, why are you using range? You should be using xrange.\r\n\r\nThe timeit function you defined isn't going to measure python execution time.\r\n\r\nI get the feeling you don't actually really know python much.\r\n\r\n&gt;Python has a bytecode interpreter, yet it is not universally faster (I think this is a common myth) than Ruby.\r\n\r\nYou're right, python is often an order of magnitude faster with Psycho for real benchmarks.\r\n\r\nDon't believe me? [Look at the great computer language shootout.](http://shootout.alioth.debian.org/sandbox/benchmark.php?test=all&amp;lang=psyco&amp;lang2=ruby)\r\n\r\nWhile all benchmarks are kind of silly, these are perhaps the best out there.\r\n\r\nNow I have nothing against being slow, but ruby really isn't in the same category of speed. Even without Psycho python is at least twice the speed on almost every benchmark (except startup time of course).","link_id":"t3_uqnu","stickied":false,"subreddit_id":"t5_2fwo","gilded":0,"retrieved_on":1473808525,"distinguished":null,"author_flair_text":null,"author":"brendankohler","id":"curv1","edited":false,"parent_id":"t1_cursi","timestamp_epoch":1566236768,"message_id":"28105-bd3a1242-c8a4-4288-9600-03b645d7821d-1566236768"}