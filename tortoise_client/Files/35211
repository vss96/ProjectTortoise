{"distinguished":null,"retrieved_on":1473807877,"gilded":0,"parent_id":"t3_tsel","id":"ctt5f","edited":false,"author":"harryf","author_flair_text":null,"score":4,"ups":4,"author_flair_css_class":null,"created_utc":1165392766,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_tsel","stickied":false,"body":"What's the feeling about how stable Django's APIs are?\r\n\r\nLast time I looked at it, started reading docs and offsite tutorials (like [that one](http://www-128.ibm.com/developerworks/linux/library/l-django/) IBM published) only to discover that the SVN trunk contained stuff that (fairly) dramatically changed the way you'd write code to Django. That was an immediate turn off and had me thinking \"wait until 1.0 until you give this any time\". Admittedly, I didn't research in detail but time is too precious so first impressions counted.\r\n\r\nI really don't want to get to know a framework that well, that I need to follow every checkin and the general vibe on the mailing lists then try to understand the impact on my code - it's \"choose a framework\" not \"choose a framework and a community\".\r\n\r\nFrom this perspective, [web.py](http://webpy.org) is very attractive - within an hour you can get a pretty good overview just reading the source.","controversiality":0,"timestamp_epoch":1566236761,"message_id":"11058-06e2af02-5876-40f8-a2a6-7b3a793d3b44-1566236761"}