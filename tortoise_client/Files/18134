{"retrieved_on":1473808728,"distinguished":null,"gilded":0,"parent_id":"t1_cv2gw","edited":false,"id":"cv2im","author_flair_text":null,"author":"[deleted]","author_flair_css_class":null,"created_utc":1166317319,"score":2,"ups":2,"subreddit":"programming","link_id":"t3_uzuc","stickied":false,"subreddit_id":"t5_2fwo","body":"This link that is a few links down on programming.reddit.com does a pretty good job:\r\n\r\nhttp://cs.anu.edu.au/Student/comp1100/haskell/tourofsyntax.html\r\n\r\nNow admittedly it doesn't cover type classes nor monads, but type classes aren't that foreign to anyone who has done any OOP programming, and monads are easy to use if not easy to completely understand.\r\n\r\nThings like pattern matching aren't complicated. Who hasn't used a switch statement? Who hasn't used an if, elif, elif, elif, else block of code before?\r\n\r\nI still think that Haskell is a sufficiently less complex language than even something like Python or Ruby. The difficult thing about it is not the language itself but how the language works (functional as opposed to OOP or procedural).\r\n\r\nAnd again, yeah the implementation and compiler might be complex, but that is the last thing a programmer needs to be worried it.","controversiality":0,"timestamp_epoch":1566236770,"message_id":"33104-471ea79e-b5d9-4171-842f-d6a680e73684-1566236770"}