{"distinguished":null,"retrieved_on":1473808702,"gilded":0,"parent_id":"t1_cv16c","edited":false,"id":"cv17l","author_flair_text":null,"author":"vincentk","score":2,"ups":2,"author_flair_css_class":null,"created_utc":1166286814,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_uw19","stickied":false,"body":"hmm. gsl does not support sparse matrices, it seems... so while this can be hacked around ... any other suggestions?\r\n\r\nin principle, all i need is this:\r\n\r\n* an efficient representation of an invariant sparse integer matrix\r\n* an efficient way to randomly access (and modify, in some haskell-compatible sense) elements of a floating point vector\r\n\r\nthere must be a \"best-practice\" way to do this, but it is difficult to divine as an outsider...","controversiality":0,"timestamp_epoch":1566236770,"message_id":"32476-15052ab9-1e85-4ee8-be30-2d3c01fa6fec-1566236770"}