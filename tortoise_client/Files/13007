{"author":"ubernostrum","author_flair_text":null,"id":"ctv99","parent_id":"t1_ctv6v","edited":false,"gilded":0,"distinguished":null,"retrieved_on":1473807915,"body":"&gt; Essentially, Rails plug-ins are just a great way of packaging reusable code. If someone else has done something, why should I do it again?\r\n\r\nYou don't \"do it again\". Rails is built from the ground up on the concept of \"one application\", so you have to resort to plug-ins, engines, etc. if you want reusable components.\r\n\r\nDjango, on the other hand, is based around the idea of loosely joining a set of applications into something useful; Django applications are \"pluggable\" in the sense that you go download the code for someone else's app, drop it into `INSTALLED_APPS` (and run `syncdb` if the app provides any models), and you're done. Now you can use anything that application provides, whether it's just adding some new views or providing sets of reusable classes/functions to call from your own code.","controversiality":0,"subreddit_id":"t5_2fwo","link_id":"t3_tsel","stickied":false,"subreddit":"programming","score":6,"ups":6,"author_flair_css_class":null,"created_utc":1165430274,"timestamp_epoch":1566236761,"message_id":"11982-e2fda5cd-5abd-40fa-91bc-4be7c63872da-1566236761"}