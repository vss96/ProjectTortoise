{"body":"Trivial example. I want an immutable pure data object with fields. At the very smallest, I use public final fields and set them in the constructor. That means though that I have to mention every field four times and mention its type twice, as well as mentioning the class name twice:\r\n\r\n    public class DataObject {\r\n    \r\n      public final int a;\r\n    \r\n      public DataObject(int a) {\r\n        this.a = a;\r\n      }\r\n    }\r\n\r\nIt's worse if I want setters.\r\n\r\nYes Eclipse can generate the above. Not this is not an excuse. I still have to read past all that line noise if I want to maintain the class.\r\n\r\nNow, it would be fairly trivial to make a Ruby mixin that would let me do:\r\n\r\n    class DataObject\r\n      attr_reader a\r\n      include InitializeReadOnly\r\n    end\r\n\r\nand then\r\n\r\n    d = DataObject.new 42\r\n\r\n...but there's no way to have that kind of flexibility in Java, at least not without resorting to a bytecode enhancer, a precompiler or a computed proxy.","controversiality":0,"subreddit_id":"t5_2fwo","link_id":"t3_utqb","stickied":false,"subreddit":"programming","score":9,"ups":9,"author_flair_css_class":null,"created_utc":1166280133,"author":"JulianMorrison","author_flair_text":null,"id":"cv0wd","parent_id":"t1_cuzyx","edited":false,"gilded":0,"distinguished":null,"retrieved_on":1473808696,"timestamp_epoch":1566236770,"message_id":"32401-662a19c4-55d5-4dab-84c8-742547d15577-1566236770"}