{"gilded":0,"retrieved_on":1473807960,"distinguished":null,"author":"cgibbard","author_flair_text":null,"edited":false,"id":"ctxn6","parent_id":"t1_ctxfc","subreddit":"programming","created_utc":1165463310,"author_flair_css_class":null,"score":24,"ups":24,"body":"While I mostly agree with you, I do think that lines of code is an important metric. The reason why isn't just time spent typing programs into the computer, but also the amount of time I can spend away from the computer while remaining productive. I can only hold a finite piece of code in my brain without things going fuzzy, perhaps a few to several lines. If I can program significant things in my head when I get up for lunch, there's certainly a benefit there in terms of time. Similarly, concise code means that it's not as hard to program on paper if there's no computer handy, or if I'm trying to communicate some code to someone else.\r\n\r\nThere are very real benefits to having a concise programming language in terms of productivity, but you're right in that they're not directly related to time spent.\r\n\r\nIt's also not really about character count or line count, but about the harder to compare notion of \"the level of abstraction\", which while it tends to have good impacts on those, is not the only factor involved. For example, renaming all your variables to have shorter names does not usually help much in terms of being able to fit code into working memory in your brain, and may even harm this in many cases.\r\n\r\nIt's really an attempt to count distinct component ideas necessary to express a large idea, a program.","controversiality":0,"stickied":false,"link_id":"t3_twtt","subreddit_id":"t5_2fwo","timestamp_epoch":1566236762,"message_id":"13099-5e4dc54a-7537-4fe2-b932-8d4909ee12fe-1566236762"}