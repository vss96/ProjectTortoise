{"controversiality":1,"body":"I have recently translated a minimal global illumination renderer from C++ to OCaml. It is about half the size -- similar to the Ruby translation. The difference is in having class interfaces defined separately, and other small things.\r\n\r\nThe implication that functional is so much more compact and simple than imperative is wrong. Look at the granularity of abstractions: they are practically the same. If you still code with the same sized building blocks it will demand similar effort.\r\n\r\nAlso, well-made imperative code has many restrictions on state interaction. It is not so far away from functional code.\r\n\r\nThe only forseeable way to greatly improved productivity is with reuse: more, better libraries/frameworks and ways of using them. (As Brooks says.)\r\n","link_id":"t3_twtt","stickied":false,"subreddit_id":"t5_2fwo","subreddit":"programming","author_flair_css_class":null,"created_utc":1165503370,"score":-1,"ups":-1,"author":"hxa7241","author_flair_text":null,"edited":false,"id":"ctzeq","parent_id":"t3_twtt","gilded":0,"retrieved_on":1473807993,"distinguished":null,"timestamp_epoch":1566236762,"message_id":"13799-b0331f55-46eb-495f-a429-6907070d52b9-1566236762"}