{"distinguished":null,"retrieved_on":1473809434,"gilded":0,"edited":false,"id":"cw3im","parent_id":"t3_w35u","author":"skyskraper","author_flair_text":null,"score":1,"ups":1,"author_flair_css_class":null,"created_utc":1167174716,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_w35u","stickied":false,"controversiality":0,"body":"beating a dead horse here, but the easiest counterargument against json is that json *IS* javascript, and unless the json \"spec\" is changed from something that was culled from the ecmascript spec, then json will not and cannot express anything that is not javascript....because...(drum roll)...it *is* javascript.\r\n\r\nso crockford and willison are incorrect in telling me it is only missing recurrent types. it is factually missing anything that is not javascript. \r\n\r\nthis is important because if you apply it as a general data transport layer, you are saying up front that you only wish to express data structures that can be expressed in javascript. \r\n\r\nwere json to be extended to go beyond javascript, it would need a schema/dtd/relax type component where types could be instantiated external to the data itself. this would be a major issue and would involve json reinventing much of xml with just a different syntax.\r\n\r\nit also bothers me that people continue to trot out the \"json is cheap\" argument. javascript's eval() is by no means \"cheap\", and to be certain, that is where 99% of the world's json goes to be digested.","timestamp_epoch":1566236778,"message_id":"51874-6ea2cc0c-6326-4bd1-adec-793581d4f22f-1566236778"}