{"body":"It's not syntactic sugar for extra functions (you do have to define functions, or objects, or whatever callable object you want to use as a decorator), it's syntactic sugar for applying HOFs to methods or functions at definition time (wrapping them)\r\n\r\nBut it's nothing more than syntactic sugar indeed, the old for of which used to be:\r\n\r\n    def foo(bar): pass\r\n    foo = decorator(foo)\r\n\r\nDecorators only link more tightly the decorator and the decorated, and through a noticeably more readable syntax:\r\n\r\n    @decorator\r\n    def foo(bar): pass\r\n\r\nWhile it's not significant for a single decorator on a single-line function, it becomes so when your function/method goes past 5 lines or so (which visually decouples the decorator application and the function definition) and when you stack decorators (since the number of decorators on a given function is unlimited)","controversiality":0,"link_id":"t3_vie8","stickied":false,"subreddit_id":"t5_2fwo","subreddit":"programming","author_flair_css_class":null,"created_utc":1166708698,"ups":4,"score":4,"author_flair_text":null,"author":"masklinn","id":"cvmfp","edited":false,"parent_id":"t1_cvki2","gilded":0,"retrieved_on":1473809109,"distinguished":null,"timestamp_epoch":1566236774,"message_id":"43107-e18b96f9-136a-44b9-9b76-5b943be3c061-1566236774"}