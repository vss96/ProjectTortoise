{"stickied":false,"link_id":"t3_u0r5","subreddit_id":"t5_2fwo","body":"The article says:\r\n&gt;Those old papers about structured programming that recommend this practice, no longer apply, we have garbage collection...\r\n\r\n\r\nI don't believe the author has actually read \"those old papers\".  The reason people advocated single-point-of-return was not for garbage collection reasons.  It was to improve the ability to reason about programs and to prove them correct.  \r\n\r\nFor example, Dijkstra wanted to associate every basic block with a minimal precondition required for it to run, and a minimal postcondition that would be true after it had run.    If you have those conditions, then you know that while BLOCK will preserve the conditions too, and if you have two blocks that preserve the conditions, then so does if BLOCK1 else BLOCK2.\r\n\r\nHowever, if the block isn't guaranteed to run to completion, it becomes much harder to prove that the conditions are satisfied.  You can't just say, \"well, by the end of the block, the condition is satisfied\", because control might have abandoned the block prematurely.\r\n\r\n","controversiality":0,"created_utc":1165525849,"author_flair_css_class":null,"ups":30,"score":30,"subreddit":"programming","edited":false,"parent_id":"t3_u0r5","id":"cu19g","author_flair_text":null,"author":"mjd","retrieved_on":1473808028,"distinguished":null,"gilded":0,"timestamp_epoch":1566236762,"message_id":"14572-a6b6c0a1-514a-4fa2-9fc4-72fe49aca087-1566236762"}