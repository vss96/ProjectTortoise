{"edited":false,"id":"cw39x","parent_id":"t1_cw1h3","author_flair_text":null,"author":"nostrademons","distinguished":null,"retrieved_on":1473809429,"gilded":0,"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_w0co","body":"Having maintained several Java apps, I don't see c) and h) as being all that true.  The secret to easy maintenance is to eliminate all the little gotchas and things that you have to remember, because inevitably they'll be forgotten by your replacement.  Java is *terrible* at that - the whole language is based around hiding state, and that state inevitably comes back around to bite you in the ass a year or two later.  The same goes for components - they *never* seem to document all the hidden gotchas that need to be documented.\r\n\r\nAll the other points are very much valid, and that's where using something like Python/Ruby/Haskell/Lisp will bite you.  It's *hard* to get an initial (non-prototype) implementation off the ground in an exotic language.  The libraries and community often don't exist, so you have to implement several features from scratch that you'd otherwise use COTS components for.  However, once that initial implementation is done, maintenance is usually easier, because the components are simpler, hide less, and leverage better abstraction mechanisms in the language.","controversiality":0,"score":1,"ups":1,"created_utc":1167169261,"author_flair_css_class":null,"subreddit":"programming","timestamp_epoch":1566236778,"message_id":"51738-80ab124d-b663-4eb2-9b6b-705050cfc12e-1566236778"}