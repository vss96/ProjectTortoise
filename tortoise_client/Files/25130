{"gilded":0,"distinguished":null,"retrieved_on":1473809510,"author_flair_text":null,"author":"xcbsmith","edited":false,"id":"cw7h6","parent_id":"t1_cw6z6","subreddit":"programming","score":1,"ups":1,"created_utc":1167269956,"author_flair_css_class":null,"body":"&gt; I agree. Mostly, i think it depends on the RAM overhead. If he can fit the relevant indices into RAM for each query, there shouldn't be much behavioral difference.\r\n\r\nI missed what you actually probably meant by that. If you meant that once the indices are so large that they don't fit in memory the partitioned solution will have an advantage, I'd have to disagree. One of the nice things about a b-tree is that just having a portion of the tree in the cache provides a performance benefit. If you could fit one of these partitioned indexes in to RAM, then you should be able to fit the equivalent portion of the non-partitioned index instead and achieve comparable performance gains, but the real win would probably be a \"most likely to use again\" cache of nodes, which can be approximated reasonably well with even a basic LRU.","controversiality":0,"subreddit_id":"t5_2fwo","stickied":false,"link_id":"t3_vzbb","timestamp_epoch":1566236779,"message_id":"54117-5683cb20-5c36-4cc7-8572-699a0fcd54db-1566236779"}