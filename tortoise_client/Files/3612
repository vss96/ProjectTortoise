{"distinguished":null,"retrieved_on":1473808242,"gilded":0,"edited":false,"id":"cucob","parent_id":"t3_ualu","author":"corwin","author_flair_text":null,"score":3,"ups":3,"author_flair_css_class":null,"created_utc":1165781188,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_ualu","stickied":false,"body":"\r\nThe problem is that Joel is confusing the concepts of simplicity and simple. They are NOT the same.\r\n\r\nSimplicity is akin to elegance. The idea being that you should not add features willy-nilly, but should add what's actually needed and design it in such a way that it hangs together. An easy way to approach this is to stack rank your features according to popularity and start from the top. Don't add a feature because your competitor has it, add it because current customers want it or prospective customers will buy your product with that feature added. Think about whether it should be a new feature or a mod to an existing one. Think about how it will look and act in the context of the app and how people will use it... In other words, simplicity isn't about the number of features, but about why they are added - you may end up with a feature rich app, but it will be one that has the right set of features. It is, as much as anything, a sensibility about how a product is designed and developed.\r\n\r\nSimple, on the other hand, relates to the scope of the product - a simple product will only do a few things. In some instances that may be all you need - before adding more you should ask yourself why you're adding them...\r\n\r\nBy confusing simplicity with simple, Joel is either being disingenuous and simply drawing traffic (akin to writing about why the Mac sucks, etc.) or he just doesn't understand the difference. Either way, an article that's not really worth much.\r\n","controversiality":0,"timestamp_epoch":1566236765,"message_id":"20626-6a6b4c5b-f488-4064-bc3b-f62cb1de545a-1566236765"}