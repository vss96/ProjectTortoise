{"author":"[deleted]","author_flair_text":null,"parent_id":"t3_utqb","id":"cuvmh","edited":false,"gilded":0,"distinguished":null,"retrieved_on":1473808596,"controversiality":0,"body":"Lets see what those who know say:\r\n\r\nJava was, as Gosling says in the first Java white paper,\r\ndesigned for average programmers. It's a perfectly\r\nlegitimate goal to design a language for average\r\nprogrammers. (Or for that matter for small children, like\r\nLogo.) But is is also a legitimate, and very different, goal\r\nto design a language for good programmers.\r\n -- Paul Graham\r\n\r\nAnd you're right: we were not out to win over the Lisp programmers;\r\nwe were after the C++ programmers.  We managed to drag a lot of them\r\nabout halfway to Lisp.  Aren't you happy?\r\n  --Guy Steele - Sun Microsystems Labs (about Java)\r\n\r\n\r\n\r\n\"I believe that Java will NOT be the last language.\r\n The next language to be a \"killer-language\" will NOT\r\n be an OO language but rather a higher-level functional or\r\n constraint-based language.\"\r\n                -- Bill Joy, JavaOne 1998.\r\n\r\nIn Lisp, if you want to do aspect-oriented programming, you just do a\r\nbunch of macros and you're there.  In Java, you have to get Gregor\r\nKiczales to go out and start a new company, taking months and years\r\nand try to get that to work.  Lisp still has the advantage there, it's\r\njust a question of people wanting that. -- Peter Norvig, Director of Research at Google \r\n\r\n\r\nI am reminded of Gregor Kiczales at ILC 2003 displaying some AspectJ to\r\na silent crowd, pausing, then plaintively adding, \"When I show that to\r\nJava programmers they stand up and cheer.\" -- Kenny Tilton\r\n","subreddit_id":"t5_2fwo","link_id":"t3_utqb","stickied":false,"subreddit":"programming","score":10,"ups":10,"author_flair_css_class":null,"created_utc":1166172901,"timestamp_epoch":1566236769,"message_id":"30018-1c849084-fcb1-46bb-ad73-b981d6ceb908-1566236769"}