{"parent_id":"t1_cvj2h","id":"cvji2","edited":false,"author":"glguy","author_flair_text":null,"distinguished":null,"retrieved_on":1473809052,"gilded":0,"subreddit_id":"t5_2fwo","link_id":"t3_viqs","stickied":false,"controversiality":0,"body":"The `print` function has been well documented by the rest of the responses, and `show` was mentioned too, but I want to make sure to respond directly to the following.\r\n\r\n&gt; In languages where polymorphism means something different, I can just send toString. Sigh.\r\n\r\nHaskell's version of `toString` is `show`\r\n\r\n    -- show has type: given a type that is an instance\r\n    -- of Show, take a value of that type and return\r\n    -- a value whose type is String\r\n    show :: (Show a) =&gt; a -&gt; String\r\n\r\nAnything that can be turned into a `String` will be an instance of `Show`.","score":2,"ups":2,"author_flair_css_class":null,"created_utc":1166647447,"subreddit":"programming","timestamp_epoch":1566236774,"message_id":"41723-eba56af6-7abb-4e8c-a448-4dfc7e14725e-1566236774"}