{"subreddit":"programming","author_flair_css_class":null,"created_utc":1165174241,"score":1,"ups":1,"controversiality":0,"body":"Interesting that you should mention Pierce and Aldrich.  I recommend Types and Programming Languages (Pierce 2002).\r\n\r\n\"Does the undecidability of full F_{&lt;:} mean that the system is useless in practice?  Actually, it is generally held that the undecidability of F_{&lt;:} is not, per se, a terribly serious deficiency.\" (Pierce pg431)\r\n\r\nThis is also mentioned in the conclusion to the paper you linked.\r\n\r\nAlso mentioned is experience with ML and Haskell (and CL, for that matter), where in principle it is expensive or undecidable, but it is not a problem in practice.\r\n\r\nThe Aldrich paper you linked discusses how type inference is a useful tool in program development.  This certainly concurs with the few discussions I've had with him.  In the section \"Is Inference Feasible?\" he discusses Pierce's paper but also further work which would indicate that a statement like \"type inference in object oriented languages is undecidable\" is simply too generalized to be true.\r\n","link_id":"t3_tdu8","stickied":false,"subreddit_id":"t5_2fwo","gilded":0,"retrieved_on":1473807649,"distinguished":null,"author":"ricercar","author_flair_text":null,"id":"ctgxf","edited":false,"parent_id":"t1_ctfd8","timestamp_epoch":1566236759,"message_id":"5260-0fc11f99-1725-4bcb-89de-db51cef71a95-1566236759"}