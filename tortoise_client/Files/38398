{"link_id":"t3_u2mr","stickied":false,"subreddit_id":"t5_2fwo","body":"You simply set aside all my arguments. As I said, it's not a difference in the feature list.\r\n\r\n&gt; Yes, particularly when dealing with code that uses multiple inheritance (an OO feature that ruby does not support, preferring mixins, which python also supports).\r\n\r\nRuby's mixins are just multiple inheritance in disguise. But many Rubyists would disagree with me on this.\r\n\r\n&gt; ruby also uses for/in syntax\r\n\r\nYes, but rarely used. Nobody uses the unsugared Python equivalent for for/in.\r\n\r\n&gt;&gt; Python has special print syntax, where Ruby has the puts, print, p, etc. methods.\r\n\r\n&gt; This could be ignorance of something on my part, but ruby has an identical print syntax...., if this somehow makes python non OO, then so is ruby\r\n\r\nNo, `print`, `puts` etc. are all plain method calls in Ruby. Pythons `print` is a statement with its own syntax, not even a function.\r\n\r\nRuby:\r\n\r\n    STDERR.puts \"error\"\r\n\r\nPython:\r\n\r\n    print &gt;&gt;sys.stderr, \"error\"\r\n\r\n&gt; For my part there are times I wish python had rubys anonymous block syntax\r\n\r\nYep, and if the blocks would be passed as first class functions ((closures, actually) so that they can be stored away and invoked later) I'd consider Python more powerful than Ruby.","controversiality":0,"author_flair_css_class":null,"created_utc":1165668782,"score":0,"ups":0,"subreddit":"programming","edited":false,"id":"cu8af","parent_id":"t1_cu7xh","author_flair_text":null,"author":"shit","retrieved_on":1473808160,"distinguished":null,"gilded":0,"timestamp_epoch":1566236764,"message_id":"18305-8a0ef3a5-7bc0-49a0-873f-1afffc0f2b7c-1566236764"}