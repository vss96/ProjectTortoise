{"stickied":false,"link_id":"t3_uocv","subreddit_id":"t5_2fwo","body":"&gt;Furthermore, he did not say that he wants C# 3.0 to be dynamic but rather he wanted to find what salient points about dynamic languages can be incorporated into C# that would help programmers.\r\n\r\nBasically, as even you wordily agree: it's a mix.  I don't think mixing static and dynamic will lead to good things (thus my purity argument).\r\n\r\n&gt;var is a keyword that instructs the compiler to infer the type of a local variable based on the expression that is used to initialize the variable.\r\n\r\nYou have to stress that \"local variable\" limitation though.  That could confuse people who are used to truly dynamic languages.\r\n\r\n&gt;&gt;To ensure the strongly typed nature of the variable that is declared with the var keyword, C# 3.0 requires that you put the assignment (initializer) on the same line as the declaration (declarator). Also, the initializer has to be an expression, not an object or collection initializer, and it cannot be null. If multiple declarators exist on the same variable, they must all evaluate to the same type at compile time.\r\n\r\nhttp://www.developer.com/net/csharp/article.php/3561756\r\n\r\n&gt;C# 3.0 does not include embedded SQL.\r\n\r\nSo are you trying to say that LINQ can't do embedded SQL?  Out of curiosity, what exactly is DLINQ then?","controversiality":0,"created_utc":1166049156,"author_flair_css_class":null,"score":-4,"ups":-4,"subreddit":"programming","id":"cup9g","edited":false,"parent_id":"t1_cuozm","author":"sbrown123","author_flair_text":null,"retrieved_on":1473808478,"distinguished":null,"gilded":0,"timestamp_epoch":1566236768,"message_id":"26955-9eeb9cf1-4aa1-463a-8121-cc38c8a0b671-1566236768"}