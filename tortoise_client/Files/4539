{"retrieved_on":1473807585,"distinguished":null,"gilded":0,"id":"ctdop","edited":false,"parent_id":"t3_tdls","author_flair_text":null,"author":"[deleted]","created_utc":1165097056,"author_flair_css_class":null,"score":2,"ups":2,"subreddit":"programming","stickied":false,"link_id":"t3_tdls","subreddit_id":"t5_2fwo","body":"Whoever said it was a one-liner was wrong. I'm going to guess that the person believes it can be written in terms of the ternary operator. This is false.\r\n\r\nThat is because of the call to an updating register - setDirty - which I imagine declares to return type void.\r\n\r\nIf you look at a decent programming language - one that is purely functional - you will see that there is no such thing as \"if without else\". Likewise, there is no such thing as updating registers.\r\n\r\nNow, a ternary operator, like many Java operators, is \"as referentially transparent (RT) as its components\". For example the + operator is RT - given 2 and 2, it will always return 4. However, getX() + getY() may not return 4, even though getX() returns 2 and getY() returns 2 at some point in time (does anyone see that imperative languages are for fools yet?).\r\n\r\nThe same can be said for the ternary:\r\ncondition ? expression1 : expression2 where any of those components may not be referentially transparent - resulting in the entire expression not being referentially transparent.\r\n\r\nIn the given example, you can write a type around the register and use that for a one liner. As it stands, the person you are refuting didn't think about it in much detail and is likely \"yet another blub who fails to see beyond the imperative world\". But, what do you expect from thedailywtf.com? Of course it will attract incompetent egotists - by definition!!\r\n\r\nGood luck and keep applying that critical thought.","controversiality":0,"timestamp_epoch":1566236759,"message_id":"3886-86f96c5d-a078-4f63-86f9-b2d02497b0b0-1566236759"}