{"controversiality":0,"body":"&gt; The power to weight ratio usually has to be pretty high to justify new syntax in a language (i.e. monadic do notation or list comprehensions are reasonable candidates for syntax extension).\r\n\r\nI'd disagree with this - new syntax is justified whenever a construct is used often enough to ingrain the syntax into your rote memory, and the existing construct is not clear.  Remember, the composition operator in Haskell is itself syntax - it's short for `(.) f g`.  Same for the cons operator, list literals, where/let definitions, cast...of construct, and a whole bunch of other syntactic constructions that all desugar to pattern-matching lambda calculus.\r\n\r\nAs long as there's a crisply-defined core language and the syntax transforms simply to that, I don't see a problem.  Python decorators fit this criteria.  Java and C++ don't.","link_id":"t3_to4r","stickied":false,"subreddit_id":"t5_2fwo","subreddit":"programming","author_flair_css_class":null,"created_utc":1165337060,"score":1,"ups":1,"author_flair_text":null,"author":"nostrademons","id":"ctpoh","edited":false,"parent_id":"t1_ctood","gilded":0,"retrieved_on":1473807812,"distinguished":null,"timestamp_epoch":1566236761,"message_id":"9218-d33857b7-0ed0-4ea2-94ff-5c2108d3ba2d-1566236761"}