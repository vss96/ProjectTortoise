{"score":1,"ups":1,"author_flair_css_class":null,"created_utc":1167151151,"subreddit":"programming","subreddit_id":"t5_2fwo","link_id":"t3_vzw8","stickied":false,"controversiality":0,"body":"One difference between writing a server side application vs writing a video game, is that nobody cares what you write your server in. You can write it in Logo or Cobol if it does the job efficiently. \r\n\r\nWith video games however you don't have the luxury of a Common Lisp implementation that will compile code that can run on the target platforms, nor any language other than those that compile to C. But if you compile to C you lose the ability to interactively compile and interpret lisp images and code on the target, so you lose a lot of the advantage.\r\n\r\nIt seems you have to do what Naughty Dog did. Write your own native code compilers for every target. Most companies don't have the time or the ability to do that well. If there was industry wide interest in doing so, then it could at least be a job shared by the community. But that's unlikely, since almost all games programmers don't believe there is anything better for them than C++.\r\n\r\nPersonally I've been in the industry since we all wrote in assembler, and C was considered too high level and slow at that time. When Java came along I saw that as a great language to take over for games programming, but that has a reputation for being too slow (plus we genuinely do have problems with garbage collection since we have to fit a lot of content into a small amount of memory).\r\n\r\n","distinguished":null,"retrieved_on":1473809414,"gilded":0,"edited":false,"parent_id":"t1_cw13q","id":"cw2fi","author_flair_text":null,"author":"justinhj","timestamp_epoch":1566236778,"message_id":"51307-826e9ca7-9e62-4563-a0f2-0ae89fb4647d-1566236778"}